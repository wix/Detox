steps:
  - block: ":rocket: Release!"
    prompt: "Fill out the details for release"
    if: 'build.message =~ /^release\$/i'
    fields:
      - select: "IS PRE-RELEASE?"
        key: "pre-release"
        default: "true"
        hint: "A corresponding pre-release prefix will be added to published version name, with the npm tag of this version (for instance, `19.5.0-preminor.0`)."
        options:
          - label: "Yes, this is a PRE-release version."
            value: "true"
          - label: "No, this is a REAL release version."
            value: "false"

      - select: "VERSION TYPE"
        key: "release-version-type"
        hint: "A successful build will be released with a version update according to the selected type."
        options:
          - label: "Patch"
            value: "patch"
          - label: "Minor"
            value: "minor"
          - label: "Major"
            value: "major"

      - select: "IS DRY RUN?"
        key: "release-dry-run"
        hint: "When set to `Yes`, don't actually release anything, just run the scripts."
        default: "false"
        options:
          - label: "Yes"
            value: "true"
          - label: "No"
            value: "false"

      - select: "SKIP NPM-PUBLISH?"
        key: "release-skip-npm"
        hint: "This is a hack to fix previously broken release jobs. You need to really know what you're doing."
        default: "false"
        options:
          - label: "Yes"
            value: "true"
          - label: "No"
            value: "false"

      - select: "DO FAST-RELEASE?"
        key: "fast-release"
        hint: "When set to `Yes`, skip building and testing. USE ONLY IF YOU REALLY REALLY HAVE TO!"
        default: "false"
        options:
          - label: "Yes"
            value: "true"
          - label: "No"
            value: "false"

      - text: "NPM TAG"
        key: "release-npm-tag"
        hint: "Leave `null` for default. For releases from master, the default is `latest`, unless this is a pre-release version, then uses `prerelease` as tag. For releases from other branches, uses `next` if from the `next` branch and `smoke` otherwise."
        default: 'null'

  - label: "Get Release Pipeline"
    command: '.buildkite/pipeline.sh release | buildkite-agent pipeline upload'
