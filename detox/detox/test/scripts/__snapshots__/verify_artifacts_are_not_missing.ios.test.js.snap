// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` 1`] = `
Array [
  "",
  ".",
  "./✓ Actions _ios_ should long press with duration on an element",
  "./✓ Actions _ios_ should long press with duration on an element/afterEach.png",
  "./✓ Actions _ios_ should long press with duration on an element/beforeEach.png",
  "./✓ Actions _ios_ should long press with duration on an element/test.log",
  "./✓ Actions should clear text in an element",
  "./✓ Actions should clear text in an element/afterEach.png",
  "./✓ Actions should clear text in an element/beforeEach.png",
  "./✓ Actions should clear text in an element/test.log",
  "./✓ Actions should long press on an element",
  "./✓ Actions should long press on an element/afterEach.png",
  "./✓ Actions should long press on an element/beforeEach.png",
  "./✓ Actions should long press on an element/test.log",
  "./✓ Actions should multi tap on an element",
  "./✓ Actions should multi tap on an element/afterEach.png",
  "./✓ Actions should multi tap on an element/beforeEach.png",
  "./✓ Actions should multi tap on an element/test.log",
  "./✓ Actions should not wait for long timeout (_1.5s)",
  "./✓ Actions should not wait for long timeout (_1.5s)/afterEach.png",
  "./✓ Actions should not wait for long timeout (_1.5s)/beforeEach.png",
  "./✓ Actions should not wait for long timeout (_1.5s)/test.log",
  "./✓ Actions should replace text in an element",
  "./✓ Actions should replace text in an element/afterEach.png",
  "./✓ Actions should replace text in an element/beforeEach.png",
  "./✓ Actions should replace text in an element/test.log",
  "./✓ Actions should scroll for a large amount in direction",
  "./✓ Actions should scroll for a large amount in direction/afterEach.png",
  "./✓ Actions should scroll for a large amount in direction/beforeEach.png",
  "./✓ Actions should scroll for a large amount in direction/test.log",
  "./✓ Actions should scroll for a small amount in direction",
  "./✓ Actions should scroll for a small amount in direction/afterEach.png",
  "./✓ Actions should scroll for a small amount in direction/beforeEach.png",
  "./✓ Actions should scroll for a small amount in direction/test.log",
  "./✓ Actions should scroll to edge",
  "./✓ Actions should scroll to edge/afterEach.png",
  "./✓ Actions should scroll to edge/beforeEach.png",
  "./✓ Actions should scroll to edge/test.log",
  "./✓ Actions should tap on an element",
  "./✓ Actions should tap on an element at point",
  "./✓ Actions should tap on an element at point/afterEach.png",
  "./✓ Actions should tap on an element at point/beforeEach.png",
  "./✓ Actions should tap on an element at point/test.log",
  "./✓ Actions should tap on an element/afterEach.png",
  "./✓ Actions should tap on an element/beforeEach.png",
  "./✓ Actions should tap on an element/test.log",
  "./✓ Actions should type in an element",
  "./✓ Actions should type in an element/afterEach.png",
  "./✓ Actions should type in an element/beforeEach.png",
  "./✓ Actions should type in an element/test.log",
  "./✓ Animations _ios_ should wait during delays shorter than 1.5s (driver_ JS)",
  "./✓ Animations _ios_ should wait during delays shorter than 1.5s (driver_ JS)/afterEach.png",
  "./✓ Animations _ios_ should wait during delays shorter than 1.5s (driver_ JS)/beforeEach.png",
  "./✓ Animations _ios_ should wait during delays shorter than 1.5s (driver_ JS)/test.log",
  "./✓ Animations _ios_ should wait during delays shorter than 1.5s (driver_ Native)",
  "./✓ Animations _ios_ should wait during delays shorter than 1.5s (driver_ Native)/afterEach.png",
  "./✓ Animations _ios_ should wait during delays shorter than 1.5s (driver_ Native)/beforeEach.png",
  "./✓ Animations _ios_ should wait during delays shorter than 1.5s (driver_ Native)/test.log",
  "./✓ Animations should detect loops with final number of iterations (driver_ JS)",
  "./✓ Animations should detect loops with final number of iterations (driver_ JS)/afterEach.png",
  "./✓ Animations should detect loops with final number of iterations (driver_ JS)/beforeEach.png",
  "./✓ Animations should detect loops with final number of iterations (driver_ JS)/test.log",
  "./✓ Animations should detect loops with final number of iterations (driver_ Native)",
  "./✓ Animations should detect loops with final number of iterations (driver_ Native)/afterEach.png",
  "./✓ Animations should detect loops with final number of iterations (driver_ Native)/beforeEach.png",
  "./✓ Animations should detect loops with final number of iterations (driver_ Native)/test.log",
  "./✓ Animations should find element (driver_ JS)",
  "./✓ Animations should find element (driver_ JS)/afterEach.png",
  "./✓ Animations should find element (driver_ JS)/beforeEach.png",
  "./✓ Animations should find element (driver_ JS)/test.log",
  "./✓ Animations should find element (driver_ Native)",
  "./✓ Animations should find element (driver_ Native)/afterEach.png",
  "./✓ Animations should find element (driver_ Native)/beforeEach.png",
  "./✓ Animations should find element (driver_ Native)/test.log",
  "./✓ Animations should not wait during delays longer than 1.5s (driver_ JS)",
  "./✓ Animations should not wait during delays longer than 1.5s (driver_ JS)/afterEach.png",
  "./✓ Animations should not wait during delays longer than 1.5s (driver_ JS)/beforeEach.png",
  "./✓ Animations should not wait during delays longer than 1.5s (driver_ JS)/test.log",
  "./✓ Animations should not wait during delays longer than 1.5s (driver_ Native)",
  "./✓ Animations should not wait during delays longer than 1.5s (driver_ Native)/afterEach.png",
  "./✓ Animations should not wait during delays longer than 1.5s (driver_ Native)/beforeEach.png",
  "./✓ Animations should not wait during delays longer than 1.5s (driver_ Native)/test.log",
  "./✓ Assertions _ios_ should assert an element has (accessibility) value",
  "./✓ Assertions _ios_ should assert an element has (accessibility) value/afterEach.png",
  "./✓ Assertions _ios_ should assert an element has (accessibility) value/beforeEach.png",
  "./✓ Assertions _ios_ should assert an element has (accessibility) value/test.log",
  "./✓ Assertions should assert an element does not exist",
  "./✓ Assertions should assert an element does not exist/afterEach.png",
  "./✓ Assertions should assert an element does not exist/beforeEach.png",
  "./✓ Assertions should assert an element does not exist/test.log",
  "./✓ Assertions should assert an element exists",
  "./✓ Assertions should assert an element exists/afterEach.png",
  "./✓ Assertions should assert an element exists/beforeEach.png",
  "./✓ Assertions should assert an element exists/test.log",
  "./✓ Assertions should assert an element has (accessibility) id",
  "./✓ Assertions should assert an element has (accessibility) id/afterEach.png",
  "./✓ Assertions should assert an element has (accessibility) id/beforeEach.png",
  "./✓ Assertions should assert an element has (accessibility) id/test.log",
  "./✓ Assertions should assert an element has (accessibility) label",
  "./✓ Assertions should assert an element has (accessibility) label/afterEach.png",
  "./✓ Assertions should assert an element has (accessibility) label/beforeEach.png",
  "./✓ Assertions should assert an element has (accessibility) label/test.log",
  "./✓ Assertions should assert an element has text",
  "./✓ Assertions should assert an element has text/afterEach.png",
  "./✓ Assertions should assert an element has text/beforeEach.png",
  "./✓ Assertions should assert an element has text/test.log",
  "./✓ Assertions should assert an element is not visible",
  "./✓ Assertions should assert an element is not visible/afterEach.png",
  "./✓ Assertions should assert an element is not visible/beforeEach.png",
  "./✓ Assertions should assert an element is not visible/test.log",
  "./✓ Assertions should assert an element is visible",
  "./✓ Assertions should assert an element is visible/afterEach.png",
  "./✓ Assertions should assert an element is visible/beforeEach.png",
  "./✓ Assertions should assert an element is visible/test.log",
  "./✓ Async and Callbacks should handle async await",
  "./✓ Async and Callbacks should handle async await/afterEach.png",
  "./✓ Async and Callbacks should handle async await/beforeEach.png",
  "./✓ Async and Callbacks should handle async await/test.log",
  "./✓ Async and Callbacks should handle done() callback",
  "./✓ Async and Callbacks should handle done() callback/afterEach.png",
  "./✓ Async and Callbacks should handle done() callback/beforeEach.png",
  "./✓ Async and Callbacks should handle done() callback/test.log",
  "./✓ Device Orientation OrientationLandscape",
  "./✓ Device Orientation OrientationLandscape/afterEach.png",
  "./✓ Device Orientation OrientationLandscape/beforeEach.png",
  "./✓ Device Orientation OrientationLandscape/test.log",
  "./✓ Device Orientation OrientationPortrait",
  "./✓ Device Orientation OrientationPortrait/afterEach.png",
  "./✓ Device Orientation OrientationPortrait/beforeEach.png",
  "./✓ Device Orientation OrientationPortrait/test.log",
  "./✓ Device _ios_ shake() should shake screen",
  "./✓ Device _ios_ shake() should shake screen/afterEach.png",
  "./✓ Device _ios_ shake() should shake screen/beforeEach.png",
  "./✓ Device _ios_ shake() should shake screen/test.log",
  "./✓ Device launchApp({newInstance_ true}) + sendToHome() + launchApp() - should bring up previous instance",
  "./✓ Device launchApp({newInstance_ true}) + sendToHome() + launchApp() - should bring up previous instance/afterEach.png",
  "./✓ Device launchApp({newInstance_ true}) + sendToHome() + launchApp() - should bring up previous instance/beforeEach.png",
  "./✓ Device launchApp({newInstance_ true}) + sendToHome() + launchApp() - should bring up previous instance/test.log",
  "./✓ Device relaunchApp - should tap successfully",
  "./✓ Device relaunchApp - should tap successfully/afterEach.png",
  "./✓ Device relaunchApp - should tap successfully/beforeEach.png",
  "./✓ Device relaunchApp - should tap successfully/test.log",
  "./✓ Device relaunchApp({delete_ true}) - should tap successfully",
  "./✓ Device relaunchApp({delete_ true}) - should tap successfully/afterEach.png",
  "./✓ Device relaunchApp({delete_ true}) - should tap successfully/beforeEach.png",
  "./✓ Device relaunchApp({delete_ true}) - should tap successfully/test.log",
  "./✓ Device reloadReactNative - should tap successfully",
  "./✓ Device reloadReactNative - should tap successfully/afterEach.png",
  "./✓ Device reloadReactNative - should tap successfully/beforeEach.png",
  "./✓ Device reloadReactNative - should tap successfully/test.log",
  "./✓ Device resetContentAndSettings() + install() + relaunch() - should tap successfully",
  "./✓ Device resetContentAndSettings() + install() + relaunch() - should tap successfully/afterEach.png",
  "./✓ Device resetContentAndSettings() + install() + relaunch() - should tap successfully/beforeEach.png",
  "./✓ Device resetContentAndSettings() + install() + relaunch() - should tap successfully/test.log",
  "./✓ Device uninstall() + install() + relaunch() - should tap successfully",
  "./✓ Device uninstall() + install() + relaunch() - should tap successfully/afterEach.png",
  "./✓ Device uninstall() + install() + relaunch() - should tap successfully/beforeEach.png",
  "./✓ Device uninstall() + install() + relaunch() - should tap successfully/test.log",
  "./✓ Matchers _ios_ should match elements by accesibility trait",
  "./✓ Matchers _ios_ should match elements by accesibility trait/afterEach.png",
  "./✓ Matchers _ios_ should match elements by accesibility trait/beforeEach.png",
  "./✓ Matchers _ios_ should match elements by accesibility trait/test.log",
  "./✓ Matchers should match elements by (accesibility) id",
  "./✓ Matchers should match elements by (accesibility) id/afterEach.png",
  "./✓ Matchers should match elements by (accesibility) id/beforeEach.png",
  "./✓ Matchers should match elements by (accesibility) id/test.log",
  "./✓ Matchers should match elements by (accesibility) label",
  "./✓ Matchers should match elements by (accesibility) label/afterEach.png",
  "./✓ Matchers should match elements by (accesibility) label/beforeEach.png",
  "./✓ Matchers should match elements by (accesibility) label/test.log",
  "./✓ Matchers should match elements by index",
  "./✓ Matchers should match elements by index/afterEach.png",
  "./✓ Matchers should match elements by index/beforeEach.png",
  "./✓ Matchers should match elements by index/test.log",
  "./✓ Matchers should match elements by type (native class)",
  "./✓ Matchers should match elements by type (native class)/afterEach.png",
  "./✓ Matchers should match elements by type (native class)/beforeEach.png",
  "./✓ Matchers should match elements by type (native class)/test.log",
  "./✓ Matchers should match elements by using two matchers together with and",
  "./✓ Matchers should match elements by using two matchers together with and/afterEach.png",
  "./✓ Matchers should match elements by using two matchers together with and/beforeEach.png",
  "./✓ Matchers should match elements by using two matchers together with and/test.log",
  "./✓ Matchers should match elements with ancenstor (parent)",
  "./✓ Matchers should match elements with ancenstor (parent)/afterEach.png",
  "./✓ Matchers should match elements with ancenstor (parent)/beforeEach.png",
  "./✓ Matchers should match elements with ancenstor (parent)/test.log",
  "./✓ Matchers should match elements with descendant (child)",
  "./✓ Matchers should match elements with descendant (child)/afterEach.png",
  "./✓ Matchers should match elements with descendant (child)/beforeEach.png",
  "./✓ Matchers should match elements with descendant (child)/test.log",
  "./✓ Network Synchronization Sync with long network requests - 3000ms",
  "./✓ Network Synchronization Sync with long network requests - 3000ms/afterEach.png",
  "./✓ Network Synchronization Sync with long network requests - 3000ms/beforeEach.png",
  "./✓ Network Synchronization Sync with long network requests - 3000ms/test.log",
  "./✓ Network Synchronization Sync with short network requests - 100ms",
  "./✓ Network Synchronization Sync with short network requests - 100ms/afterEach.png",
  "./✓ Network Synchronization Sync with short network requests - 100ms/beforeEach.png",
  "./✓ Network Synchronization Sync with short network requests - 100ms/test.log",
  "./✓ Network Synchronization disableSynchronization() should disable sync",
  "./✓ Network Synchronization disableSynchronization() should disable sync/afterEach.png",
  "./✓ Network Synchronization disableSynchronization() should disable sync/beforeEach.png",
  "./✓ Network Synchronization disableSynchronization() should disable sync/test.log",
  "./✓ Network Synchronization setURLBlacklist() should disable synchronization for given endpoint",
  "./✓ Network Synchronization setURLBlacklist() should disable synchronization for given endpoint/afterEach.png",
  "./✓ Network Synchronization setURLBlacklist() should disable synchronization for given endpoint/beforeEach.png",
  "./✓ Network Synchronization setURLBlacklist() should disable synchronization for given endpoint/test.log",
  "./✓ Open URLs device.launchApp({url_ url}) should trigger open url handling in app when app is in background",
  "./✓ Open URLs device.launchApp({url_ url}) should trigger open url handling in app when app is in background/afterEach.png",
  "./✓ Open URLs device.launchApp({url_ url}) should trigger open url handling in app when app is in background/beforeEach.png",
  "./✓ Open URLs device.launchApp({url_ url}) should trigger open url handling in app when app is in background/test.log",
  "./✓ Open URLs device.launchApp({{newInstance_ true, url_ url}) should launch app and trigger handling open url handling in app",
  "./✓ Open URLs device.launchApp({{newInstance_ true, url_ url}) should launch app and trigger handling open url handling in app/afterEach.png",
  "./✓ Open URLs device.launchApp({{newInstance_ true, url_ url}) should launch app and trigger handling open url handling in app/beforeEach.png",
  "./✓ Open URLs device.launchApp({{newInstance_ true, url_ url}) should launch app and trigger handling open url handling in app/test.log",
  "./✓ Open URLs device.openURL({url_ url}) should trigger open url handling in app when app is in foreground",
  "./✓ Open URLs device.openURL({url_ url}) should trigger open url handling in app when app is in foreground/afterEach.png",
  "./✓ Open URLs device.openURL({url_ url}) should trigger open url handling in app when app is in foreground/beforeEach.png",
  "./✓ Open URLs device.openURL({url_ url}) should trigger open url handling in app when app is in foreground/test.log",
  "./✓ Sanity should have welcome screen",
  "./✓ Sanity should have welcome screen/afterEach.png",
  "./✓ Sanity should have welcome screen/beforeEach.png",
  "./✓ Sanity should have welcome screen/test.log",
  "./✓ Sanity should show hello screen after tap",
  "./✓ Sanity should show hello screen after tap/afterEach.png",
  "./✓ Sanity should show hello screen after tap/beforeEach.png",
  "./✓ Sanity should show hello screen after tap/test.log",
  "./✓ Sanity should show world screen after tap",
  "./✓ Sanity should show world screen after tap/afterEach.png",
  "./✓ Sanity should show world screen after tap/beforeEach.png",
  "./✓ Sanity should show world screen after tap/test.log",
  "./✓ StressRoot _ios_ should switch root view controller from RN to RN",
  "./✓ StressRoot _ios_ should switch root view controller from RN to RN/afterEach.png",
  "./✓ StressRoot _ios_ should switch root view controller from RN to RN/beforeEach.png",
  "./✓ StressRoot _ios_ should switch root view controller from RN to RN/test.log",
  "./✓ StressRoot should switch root view controller from RN to native",
  "./✓ StressRoot should switch root view controller from RN to native/afterEach.png",
  "./✓ StressRoot should switch root view controller from RN to native/beforeEach.png",
  "./✓ StressRoot should switch root view controller from RN to native/test.log",
  "./✓ StressTests should handle consecutive taps",
  "./✓ StressTests should handle consecutive taps/afterEach.png",
  "./✓ StressTests should handle consecutive taps/beforeEach.png",
  "./✓ StressTests should handle consecutive taps/test.log",
  "./✓ StressTests should handle tap during busy JS event loop",
  "./✓ StressTests should handle tap during busy JS event loop/afterEach.png",
  "./✓ StressTests should handle tap during busy JS event loop/beforeEach.png",
  "./✓ StressTests should handle tap during busy JS event loop/test.log",
  "./✓ StressTests should handle tap during busy bridge (one way)",
  "./✓ StressTests should handle tap during busy bridge (one way)/afterEach.png",
  "./✓ StressTests should handle tap during busy bridge (one way)/beforeEach.png",
  "./✓ StressTests should handle tap during busy bridge (one way)/test.log",
  "./✓ StressTests should handle tap during busy bridge (setState)",
  "./✓ StressTests should handle tap during busy bridge (setState)/afterEach.png",
  "./✓ StressTests should handle tap during busy bridge (setState)/beforeEach.png",
  "./✓ StressTests should handle tap during busy bridge (setState)/test.log",
  "./✓ StressTests should handle tap during busy bridge (two way)",
  "./✓ StressTests should handle tap during busy bridge (two way)/afterEach.png",
  "./✓ StressTests should handle tap during busy bridge (two way)/beforeEach.png",
  "./✓ StressTests should handle tap during busy bridge (two way)/test.log",
  "./✓ StressTimeouts _ios_ should handle a short timeout",
  "./✓ StressTimeouts _ios_ should handle a short timeout/afterEach.png",
  "./✓ StressTimeouts _ios_ should handle a short timeout/beforeEach.png",
  "./✓ StressTimeouts _ios_ should handle a short timeout/test.log",
  "./✓ StressTimeouts should handle setImmediate",
  "./✓ StressTimeouts should handle setImmediate/afterEach.png",
  "./✓ StressTimeouts should handle setImmediate/beforeEach.png",
  "./✓ StressTimeouts should handle setImmediate/test.log",
  "./✓ StressTimeouts should handle zero timeout",
  "./✓ StressTimeouts should handle zero timeout/afterEach.png",
  "./✓ StressTimeouts should handle zero timeout/beforeEach.png",
  "./✓ StressTimeouts should handle zero timeout/test.log",
  "./✓ StressTimeouts should ignore a long timeout",
  "./✓ StressTimeouts should ignore a long timeout/afterEach.png",
  "./✓ StressTimeouts should ignore a long timeout/beforeEach.png",
  "./✓ StressTimeouts should ignore a long timeout/test.log",
  "./✓ StressTimeouts should ignore a short timeout",
  "./✓ StressTimeouts should ignore a short timeout/afterEach.png",
  "./✓ StressTimeouts should ignore a short timeout/beforeEach.png",
  "./✓ StressTimeouts should ignore a short timeout/test.log",
  "./✓ StressTimeouts should ignore setInterval",
  "./✓ StressTimeouts should ignore setInterval/afterEach.png",
  "./✓ StressTimeouts should ignore setInterval/beforeEach.png",
  "./✓ StressTimeouts should ignore setInterval/test.log",
  "./✓ WaitFor should find element by scrolling until it is visible",
  "./✓ WaitFor should find element by scrolling until it is visible/afterEach.png",
  "./✓ WaitFor should find element by scrolling until it is visible/beforeEach.png",
  "./✓ WaitFor should find element by scrolling until it is visible/test.log",
  "./✓ WaitFor should wait until an element is created and exists in layout",
  "./✓ WaitFor should wait until an element is created and exists in layout/afterEach.png",
  "./✓ WaitFor should wait until an element is created and exists in layout/beforeEach.png",
  "./✓ WaitFor should wait until an element is created and exists in layout/test.log",
  "./✓ WaitFor should wait until an element is removed",
  "./✓ WaitFor should wait until an element is removed/afterEach.png",
  "./✓ WaitFor should wait until an element is removed/beforeEach.png",
  "./✓ WaitFor should wait until an element is removed/test.log",
  "./✓ _ios_ Crash Handling Should recover from app crash",
  "./✓ _ios_ Crash Handling Should recover from app crash/afterEach.png",
  "./✓ _ios_ Crash Handling Should recover from app crash/beforeEach.png",
  "./✓ _ios_ Crash Handling Should recover from app crash/test.log",
  "./✓ _ios_ Crash Handling Should throw error upon app crash",
  "./✓ _ios_ Crash Handling Should throw error upon app crash/afterEach.png",
  "./✓ _ios_ Crash Handling Should throw error upon app crash/beforeEach.png",
  "./✓ _ios_ Crash Handling Should throw error upon app crash/test.log",
  "./✓ _ios_ DatePicker datePicker should trigger change handler correctly",
  "./✓ _ios_ DatePicker datePicker should trigger change handler correctly/afterEach.png",
  "./✓ _ios_ DatePicker datePicker should trigger change handler correctly/beforeEach.png",
  "./✓ _ios_ DatePicker datePicker should trigger change handler correctly/test.log",
  "./✓ _ios_ Permissions Permissions denied",
  "./✓ _ios_ Permissions Permissions denied/afterEach.png",
  "./✓ _ios_ Permissions Permissions denied/beforeEach.png",
  "./✓ _ios_ Permissions Permissions denied/test.log",
  "./✓ _ios_ Permissions Permissions is granted",
  "./✓ _ios_ Permissions Permissions is granted/afterEach.png",
  "./✓ _ios_ Permissions Permissions is granted/beforeEach.png",
  "./✓ _ios_ Permissions Permissions is granted/test.log",
  "./✓ _ios_ User Activity Background searchable item",
  "./✓ _ios_ User Activity Background searchable item/afterEach.png",
  "./✓ _ios_ User Activity Background searchable item/beforeEach.png",
  "./✓ _ios_ User Activity Background searchable item/test.log",
  "./✓ _ios_ User Activity Foreground browsing web",
  "./✓ _ios_ User Activity Foreground browsing web/afterEach.png",
  "./✓ _ios_ User Activity Foreground browsing web/beforeEach.png",
  "./✓ _ios_ User Activity Foreground browsing web/test.log",
  "./✓ _ios_ User Activity Init from browsing web",
  "./✓ _ios_ User Activity Init from browsing web/afterEach.png",
  "./✓ _ios_ User Activity Init from browsing web/beforeEach.png",
  "./✓ _ios_ User Activity Init from browsing web/test.log",
  "./✓ _ios_ User Notifications Background calendar notification",
  "./✓ _ios_ User Notifications Background calendar notification/afterEach.png",
  "./✓ _ios_ User Notifications Background calendar notification/beforeEach.png",
  "./✓ _ios_ User Notifications Background calendar notification/test.log",
  "./✓ _ios_ User Notifications Background push notification",
  "./✓ _ios_ User Notifications Background push notification/afterEach.png",
  "./✓ _ios_ User Notifications Background push notification/beforeEach.png",
  "./✓ _ios_ User Notifications Background push notification/test.log",
  "./✓ _ios_ User Notifications Foreground calendar notifications",
  "./✓ _ios_ User Notifications Foreground calendar notifications/afterEach.png",
  "./✓ _ios_ User Notifications Foreground calendar notifications/beforeEach.png",
  "./✓ _ios_ User Notifications Foreground calendar notifications/test.log",
  "./✓ _ios_ User Notifications Foreground push notifications",
  "./✓ _ios_ User Notifications Foreground push notifications/afterEach.png",
  "./✓ _ios_ User Notifications Foreground push notifications/beforeEach.png",
  "./✓ _ios_ User Notifications Foreground push notifications/test.log",
  "./✓ _ios_ User Notifications Init from push notification",
  "./✓ _ios_ User Notifications Init from push notification/afterEach.png",
  "./✓ _ios_ User Notifications Init from push notification/beforeEach.png",
  "./✓ _ios_ User Notifications Init from push notification/test.log",
  "./✓ _ios_ location Location should be unavabilable",
  "./✓ _ios_ location Location should be unavabilable/afterEach.png",
  "./✓ _ios_ location Location should be unavabilable/beforeEach.png",
  "./✓ _ios_ location Location should be unavabilable/test.log",
  "./✓ _ios_ location Should receive location (20,20)",
  "./✓ _ios_ location Should receive location (20,20)/afterEach.png",
  "./✓ _ios_ location Should receive location (20,20)/beforeEach.png",
  "./✓ _ios_ location Should receive location (20,20)/test.log",
  "1.detox.json.log",
  "1.detox.log",
  "1.startup.log",
]
`;

exports[`artifacts health check should have all the iOS artifacts in ./artifacts folder 1`] = `
Array [
  "",
  ".",
  "./✓ Actions _ios_ should long press with duration on an element",
  "./✓ Actions _ios_ should long press with duration on an element/afterEach.png",
  "./✓ Actions _ios_ should long press with duration on an element/beforeEach.png",
  "./✓ Actions _ios_ should long press with duration on an element/test.log",
  "./✓ Actions should clear text in an element",
  "./✓ Actions should clear text in an element/afterEach.png",
  "./✓ Actions should clear text in an element/beforeEach.png",
  "./✓ Actions should clear text in an element/test.log",
  "./✓ Actions should long press on an element",
  "./✓ Actions should long press on an element/afterEach.png",
  "./✓ Actions should long press on an element/beforeEach.png",
  "./✓ Actions should long press on an element/test.log",
  "./✓ Actions should multi tap on an element",
  "./✓ Actions should multi tap on an element/afterEach.png",
  "./✓ Actions should multi tap on an element/beforeEach.png",
  "./✓ Actions should multi tap on an element/test.log",
  "./✓ Actions should not wait for long timeout (_1.5s)",
  "./✓ Actions should not wait for long timeout (_1.5s)/afterEach.png",
  "./✓ Actions should not wait for long timeout (_1.5s)/beforeEach.png",
  "./✓ Actions should not wait for long timeout (_1.5s)/test.log",
  "./✓ Actions should replace text in an element",
  "./✓ Actions should replace text in an element/afterEach.png",
  "./✓ Actions should replace text in an element/beforeEach.png",
  "./✓ Actions should replace text in an element/test.log",
  "./✓ Actions should scroll for a large amount in direction",
  "./✓ Actions should scroll for a large amount in direction/afterEach.png",
  "./✓ Actions should scroll for a large amount in direction/beforeEach.png",
  "./✓ Actions should scroll for a large amount in direction/test.log",
  "./✓ Actions should scroll for a small amount in direction",
  "./✓ Actions should scroll for a small amount in direction/afterEach.png",
  "./✓ Actions should scroll for a small amount in direction/beforeEach.png",
  "./✓ Actions should scroll for a small amount in direction/test.log",
  "./✓ Actions should scroll to edge",
  "./✓ Actions should scroll to edge/afterEach.png",
  "./✓ Actions should scroll to edge/beforeEach.png",
  "./✓ Actions should scroll to edge/test.log",
  "./✓ Actions should tap on an element",
  "./✓ Actions should tap on an element at point",
  "./✓ Actions should tap on an element at point/afterEach.png",
  "./✓ Actions should tap on an element at point/beforeEach.png",
  "./✓ Actions should tap on an element at point/test.log",
  "./✓ Actions should tap on an element/afterEach.png",
  "./✓ Actions should tap on an element/beforeEach.png",
  "./✓ Actions should tap on an element/test.log",
  "./✓ Actions should type in an element",
  "./✓ Actions should type in an element/afterEach.png",
  "./✓ Actions should type in an element/beforeEach.png",
  "./✓ Actions should type in an element/test.log",
  "./✓ Animations _ios_ should wait during delays shorter than 1.5s (driver_ JS)",
  "./✓ Animations _ios_ should wait during delays shorter than 1.5s (driver_ JS)/afterEach.png",
  "./✓ Animations _ios_ should wait during delays shorter than 1.5s (driver_ JS)/beforeEach.png",
  "./✓ Animations _ios_ should wait during delays shorter than 1.5s (driver_ JS)/test.log",
  "./✓ Animations _ios_ should wait during delays shorter than 1.5s (driver_ Native)",
  "./✓ Animations _ios_ should wait during delays shorter than 1.5s (driver_ Native)/afterEach.png",
  "./✓ Animations _ios_ should wait during delays shorter than 1.5s (driver_ Native)/beforeEach.png",
  "./✓ Animations _ios_ should wait during delays shorter than 1.5s (driver_ Native)/test.log",
  "./✓ Animations should detect loops with final number of iterations (driver_ JS)",
  "./✓ Animations should detect loops with final number of iterations (driver_ JS)/afterEach.png",
  "./✓ Animations should detect loops with final number of iterations (driver_ JS)/beforeEach.png",
  "./✓ Animations should detect loops with final number of iterations (driver_ JS)/test.log",
  "./✓ Animations should detect loops with final number of iterations (driver_ Native)",
  "./✓ Animations should detect loops with final number of iterations (driver_ Native)/afterEach.png",
  "./✓ Animations should detect loops with final number of iterations (driver_ Native)/beforeEach.png",
  "./✓ Animations should detect loops with final number of iterations (driver_ Native)/test.log",
  "./✓ Animations should find element (driver_ JS)",
  "./✓ Animations should find element (driver_ JS)/afterEach.png",
  "./✓ Animations should find element (driver_ JS)/beforeEach.png",
  "./✓ Animations should find element (driver_ JS)/test.log",
  "./✓ Animations should find element (driver_ Native)",
  "./✓ Animations should find element (driver_ Native)/afterEach.png",
  "./✓ Animations should find element (driver_ Native)/beforeEach.png",
  "./✓ Animations should find element (driver_ Native)/test.log",
  "./✓ Animations should not wait during delays longer than 1.5s (driver_ JS)",
  "./✓ Animations should not wait during delays longer than 1.5s (driver_ JS)/afterEach.png",
  "./✓ Animations should not wait during delays longer than 1.5s (driver_ JS)/beforeEach.png",
  "./✓ Animations should not wait during delays longer than 1.5s (driver_ JS)/test.log",
  "./✓ Animations should not wait during delays longer than 1.5s (driver_ Native)",
  "./✓ Animations should not wait during delays longer than 1.5s (driver_ Native)/afterEach.png",
  "./✓ Animations should not wait during delays longer than 1.5s (driver_ Native)/beforeEach.png",
  "./✓ Animations should not wait during delays longer than 1.5s (driver_ Native)/test.log",
  "./✓ Assertions _ios_ should assert an element has (accessibility) value",
  "./✓ Assertions _ios_ should assert an element has (accessibility) value/afterEach.png",
  "./✓ Assertions _ios_ should assert an element has (accessibility) value/beforeEach.png",
  "./✓ Assertions _ios_ should assert an element has (accessibility) value/test.log",
  "./✓ Assertions should assert an element does not exist",
  "./✓ Assertions should assert an element does not exist/afterEach.png",
  "./✓ Assertions should assert an element does not exist/beforeEach.png",
  "./✓ Assertions should assert an element does not exist/test.log",
  "./✓ Assertions should assert an element exists",
  "./✓ Assertions should assert an element exists/afterEach.png",
  "./✓ Assertions should assert an element exists/beforeEach.png",
  "./✓ Assertions should assert an element exists/test.log",
  "./✓ Assertions should assert an element has (accessibility) id",
  "./✓ Assertions should assert an element has (accessibility) id/afterEach.png",
  "./✓ Assertions should assert an element has (accessibility) id/beforeEach.png",
  "./✓ Assertions should assert an element has (accessibility) id/test.log",
  "./✓ Assertions should assert an element has (accessibility) label",
  "./✓ Assertions should assert an element has (accessibility) label/afterEach.png",
  "./✓ Assertions should assert an element has (accessibility) label/beforeEach.png",
  "./✓ Assertions should assert an element has (accessibility) label/test.log",
  "./✓ Assertions should assert an element has text",
  "./✓ Assertions should assert an element has text/afterEach.png",
  "./✓ Assertions should assert an element has text/beforeEach.png",
  "./✓ Assertions should assert an element has text/test.log",
  "./✓ Assertions should assert an element is not visible",
  "./✓ Assertions should assert an element is not visible/afterEach.png",
  "./✓ Assertions should assert an element is not visible/beforeEach.png",
  "./✓ Assertions should assert an element is not visible/test.log",
  "./✓ Assertions should assert an element is visible",
  "./✓ Assertions should assert an element is visible/afterEach.png",
  "./✓ Assertions should assert an element is visible/beforeEach.png",
  "./✓ Assertions should assert an element is visible/test.log",
  "./✓ Async and Callbacks should handle async await",
  "./✓ Async and Callbacks should handle async await/afterEach.png",
  "./✓ Async and Callbacks should handle async await/beforeEach.png",
  "./✓ Async and Callbacks should handle async await/test.log",
  "./✓ Async and Callbacks should handle done() callback",
  "./✓ Async and Callbacks should handle done() callback/afterEach.png",
  "./✓ Async and Callbacks should handle done() callback/beforeEach.png",
  "./✓ Async and Callbacks should handle done() callback/test.log",
  "./✓ Device Orientation OrientationLandscape",
  "./✓ Device Orientation OrientationLandscape/afterEach.png",
  "./✓ Device Orientation OrientationLandscape/beforeEach.png",
  "./✓ Device Orientation OrientationLandscape/test.log",
  "./✓ Device Orientation OrientationPortrait",
  "./✓ Device Orientation OrientationPortrait/afterEach.png",
  "./✓ Device Orientation OrientationPortrait/beforeEach.png",
  "./✓ Device Orientation OrientationPortrait/test.log",
  "./✓ Device _ios_ shake() should shake screen",
  "./✓ Device _ios_ shake() should shake screen/afterEach.png",
  "./✓ Device _ios_ shake() should shake screen/beforeEach.png",
  "./✓ Device _ios_ shake() should shake screen/test.log",
  "./✓ Device launchApp({newInstance_ true}) + sendToHome() + launchApp() - should bring up previous instance",
  "./✓ Device launchApp({newInstance_ true}) + sendToHome() + launchApp() - should bring up previous instance/afterEach.png",
  "./✓ Device launchApp({newInstance_ true}) + sendToHome() + launchApp() - should bring up previous instance/beforeEach.png",
  "./✓ Device launchApp({newInstance_ true}) + sendToHome() + launchApp() - should bring up previous instance/test.log",
  "./✓ Device relaunchApp - should tap successfully",
  "./✓ Device relaunchApp - should tap successfully/afterEach.png",
  "./✓ Device relaunchApp - should tap successfully/beforeEach.png",
  "./✓ Device relaunchApp - should tap successfully/test.log",
  "./✓ Device relaunchApp({delete_ true}) - should tap successfully",
  "./✓ Device relaunchApp({delete_ true}) - should tap successfully/afterEach.png",
  "./✓ Device relaunchApp({delete_ true}) - should tap successfully/beforeEach.png",
  "./✓ Device relaunchApp({delete_ true}) - should tap successfully/test.log",
  "./✓ Device reloadReactNative - should tap successfully",
  "./✓ Device reloadReactNative - should tap successfully/afterEach.png",
  "./✓ Device reloadReactNative - should tap successfully/beforeEach.png",
  "./✓ Device reloadReactNative - should tap successfully/test.log",
  "./✓ Device resetContentAndSettings() + install() + relaunch() - should tap successfully",
  "./✓ Device resetContentAndSettings() + install() + relaunch() - should tap successfully/afterEach.png",
  "./✓ Device resetContentAndSettings() + install() + relaunch() - should tap successfully/beforeEach.png",
  "./✓ Device resetContentAndSettings() + install() + relaunch() - should tap successfully/test.log",
  "./✓ Device uninstall() + install() + relaunch() - should tap successfully",
  "./✓ Device uninstall() + install() + relaunch() - should tap successfully/afterEach.png",
  "./✓ Device uninstall() + install() + relaunch() - should tap successfully/beforeEach.png",
  "./✓ Device uninstall() + install() + relaunch() - should tap successfully/test.log",
  "./✓ Matchers _ios_ should match elements by accesibility trait",
  "./✓ Matchers _ios_ should match elements by accesibility trait/afterEach.png",
  "./✓ Matchers _ios_ should match elements by accesibility trait/beforeEach.png",
  "./✓ Matchers _ios_ should match elements by accesibility trait/test.log",
  "./✓ Matchers should match elements by (accesibility) id",
  "./✓ Matchers should match elements by (accesibility) id/afterEach.png",
  "./✓ Matchers should match elements by (accesibility) id/beforeEach.png",
  "./✓ Matchers should match elements by (accesibility) id/test.log",
  "./✓ Matchers should match elements by (accesibility) label",
  "./✓ Matchers should match elements by (accesibility) label/afterEach.png",
  "./✓ Matchers should match elements by (accesibility) label/beforeEach.png",
  "./✓ Matchers should match elements by (accesibility) label/test.log",
  "./✓ Matchers should match elements by index",
  "./✓ Matchers should match elements by index/afterEach.png",
  "./✓ Matchers should match elements by index/beforeEach.png",
  "./✓ Matchers should match elements by index/test.log",
  "./✓ Matchers should match elements by type (native class)",
  "./✓ Matchers should match elements by type (native class)/afterEach.png",
  "./✓ Matchers should match elements by type (native class)/beforeEach.png",
  "./✓ Matchers should match elements by type (native class)/test.log",
  "./✓ Matchers should match elements by using two matchers together with and",
  "./✓ Matchers should match elements by using two matchers together with and/afterEach.png",
  "./✓ Matchers should match elements by using two matchers together with and/beforeEach.png",
  "./✓ Matchers should match elements by using two matchers together with and/test.log",
  "./✓ Matchers should match elements with ancenstor (parent)",
  "./✓ Matchers should match elements with ancenstor (parent)/afterEach.png",
  "./✓ Matchers should match elements with ancenstor (parent)/beforeEach.png",
  "./✓ Matchers should match elements with ancenstor (parent)/test.log",
  "./✓ Matchers should match elements with descendant (child)",
  "./✓ Matchers should match elements with descendant (child)/afterEach.png",
  "./✓ Matchers should match elements with descendant (child)/beforeEach.png",
  "./✓ Matchers should match elements with descendant (child)/test.log",
  "./✓ Network Synchronization Sync with long network requests - 3000ms",
  "./✓ Network Synchronization Sync with long network requests - 3000ms/afterEach.png",
  "./✓ Network Synchronization Sync with long network requests - 3000ms/beforeEach.png",
  "./✓ Network Synchronization Sync with long network requests - 3000ms/test.log",
  "./✓ Network Synchronization Sync with short network requests - 100ms",
  "./✓ Network Synchronization Sync with short network requests - 100ms/afterEach.png",
  "./✓ Network Synchronization Sync with short network requests - 100ms/beforeEach.png",
  "./✓ Network Synchronization Sync with short network requests - 100ms/test.log",
  "./✓ Network Synchronization disableSynchronization() should disable sync",
  "./✓ Network Synchronization disableSynchronization() should disable sync/afterEach.png",
  "./✓ Network Synchronization disableSynchronization() should disable sync/beforeEach.png",
  "./✓ Network Synchronization disableSynchronization() should disable sync/test.log",
  "./✓ Network Synchronization setURLBlacklist() should disable synchronization for given endpoint",
  "./✓ Network Synchronization setURLBlacklist() should disable synchronization for given endpoint/afterEach.png",
  "./✓ Network Synchronization setURLBlacklist() should disable synchronization for given endpoint/beforeEach.png",
  "./✓ Network Synchronization setURLBlacklist() should disable synchronization for given endpoint/test.log",
  "./✓ Open URLs device.launchApp({url_ url}) should trigger open url handling in app when app is in background",
  "./✓ Open URLs device.launchApp({url_ url}) should trigger open url handling in app when app is in background/afterEach.png",
  "./✓ Open URLs device.launchApp({url_ url}) should trigger open url handling in app when app is in background/beforeEach.png",
  "./✓ Open URLs device.launchApp({url_ url}) should trigger open url handling in app when app is in background/test.log",
  "./✓ Open URLs device.launchApp({{newInstance_ true, url_ url}) should launch app and trigger handling open url handling in app",
  "./✓ Open URLs device.launchApp({{newInstance_ true, url_ url}) should launch app and trigger handling open url handling in app/afterEach.png",
  "./✓ Open URLs device.launchApp({{newInstance_ true, url_ url}) should launch app and trigger handling open url handling in app/beforeEach.png",
  "./✓ Open URLs device.launchApp({{newInstance_ true, url_ url}) should launch app and trigger handling open url handling in app/test.log",
  "./✓ Open URLs device.openURL({url_ url}) should trigger open url handling in app when app is in foreground",
  "./✓ Open URLs device.openURL({url_ url}) should trigger open url handling in app when app is in foreground/afterEach.png",
  "./✓ Open URLs device.openURL({url_ url}) should trigger open url handling in app when app is in foreground/beforeEach.png",
  "./✓ Open URLs device.openURL({url_ url}) should trigger open url handling in app when app is in foreground/test.log",
  "./✓ Sanity should have welcome screen",
  "./✓ Sanity should have welcome screen/afterEach.png",
  "./✓ Sanity should have welcome screen/beforeEach.png",
  "./✓ Sanity should have welcome screen/test.log",
  "./✓ Sanity should show hello screen after tap",
  "./✓ Sanity should show hello screen after tap/afterEach.png",
  "./✓ Sanity should show hello screen after tap/beforeEach.png",
  "./✓ Sanity should show hello screen after tap/test.log",
  "./✓ Sanity should show world screen after tap",
  "./✓ Sanity should show world screen after tap/afterEach.png",
  "./✓ Sanity should show world screen after tap/beforeEach.png",
  "./✓ Sanity should show world screen after tap/test.log",
  "./✓ StressRoot _ios_ should switch root view controller from RN to RN",
  "./✓ StressRoot _ios_ should switch root view controller from RN to RN/afterEach.png",
  "./✓ StressRoot _ios_ should switch root view controller from RN to RN/beforeEach.png",
  "./✓ StressRoot _ios_ should switch root view controller from RN to RN/test.log",
  "./✓ StressRoot should switch root view controller from RN to native",
  "./✓ StressRoot should switch root view controller from RN to native/afterEach.png",
  "./✓ StressRoot should switch root view controller from RN to native/beforeEach.png",
  "./✓ StressRoot should switch root view controller from RN to native/test.log",
  "./✓ StressTests should handle consecutive taps",
  "./✓ StressTests should handle consecutive taps/afterEach.png",
  "./✓ StressTests should handle consecutive taps/beforeEach.png",
  "./✓ StressTests should handle consecutive taps/test.log",
  "./✓ StressTests should handle tap during busy JS event loop",
  "./✓ StressTests should handle tap during busy JS event loop/afterEach.png",
  "./✓ StressTests should handle tap during busy JS event loop/beforeEach.png",
  "./✓ StressTests should handle tap during busy JS event loop/test.log",
  "./✓ StressTests should handle tap during busy bridge (one way)",
  "./✓ StressTests should handle tap during busy bridge (one way)/afterEach.png",
  "./✓ StressTests should handle tap during busy bridge (one way)/beforeEach.png",
  "./✓ StressTests should handle tap during busy bridge (one way)/test.log",
  "./✓ StressTests should handle tap during busy bridge (setState)",
  "./✓ StressTests should handle tap during busy bridge (setState)/afterEach.png",
  "./✓ StressTests should handle tap during busy bridge (setState)/beforeEach.png",
  "./✓ StressTests should handle tap during busy bridge (setState)/test.log",
  "./✓ StressTests should handle tap during busy bridge (two way)",
  "./✓ StressTests should handle tap during busy bridge (two way)/afterEach.png",
  "./✓ StressTests should handle tap during busy bridge (two way)/beforeEach.png",
  "./✓ StressTests should handle tap during busy bridge (two way)/test.log",
  "./✓ StressTimeouts _ios_ should handle a short timeout",
  "./✓ StressTimeouts _ios_ should handle a short timeout/afterEach.png",
  "./✓ StressTimeouts _ios_ should handle a short timeout/beforeEach.png",
  "./✓ StressTimeouts _ios_ should handle a short timeout/test.log",
  "./✓ StressTimeouts should handle setImmediate",
  "./✓ StressTimeouts should handle setImmediate/afterEach.png",
  "./✓ StressTimeouts should handle setImmediate/beforeEach.png",
  "./✓ StressTimeouts should handle setImmediate/test.log",
  "./✓ StressTimeouts should handle zero timeout",
  "./✓ StressTimeouts should handle zero timeout/afterEach.png",
  "./✓ StressTimeouts should handle zero timeout/beforeEach.png",
  "./✓ StressTimeouts should handle zero timeout/test.log",
  "./✓ StressTimeouts should ignore a long timeout",
  "./✓ StressTimeouts should ignore a long timeout/afterEach.png",
  "./✓ StressTimeouts should ignore a long timeout/beforeEach.png",
  "./✓ StressTimeouts should ignore a long timeout/test.log",
  "./✓ StressTimeouts should ignore a short timeout",
  "./✓ StressTimeouts should ignore a short timeout/afterEach.png",
  "./✓ StressTimeouts should ignore a short timeout/beforeEach.png",
  "./✓ StressTimeouts should ignore a short timeout/test.log",
  "./✓ StressTimeouts should ignore setInterval",
  "./✓ StressTimeouts should ignore setInterval/afterEach.png",
  "./✓ StressTimeouts should ignore setInterval/beforeEach.png",
  "./✓ StressTimeouts should ignore setInterval/test.log",
  "./✓ WaitFor should find element by scrolling until it is visible",
  "./✓ WaitFor should find element by scrolling until it is visible/afterEach.png",
  "./✓ WaitFor should find element by scrolling until it is visible/beforeEach.png",
  "./✓ WaitFor should find element by scrolling until it is visible/test.log",
  "./✓ WaitFor should wait until an element is created and exists in layout",
  "./✓ WaitFor should wait until an element is created and exists in layout/afterEach.png",
  "./✓ WaitFor should wait until an element is created and exists in layout/beforeEach.png",
  "./✓ WaitFor should wait until an element is created and exists in layout/test.log",
  "./✓ WaitFor should wait until an element is removed",
  "./✓ WaitFor should wait until an element is removed/afterEach.png",
  "./✓ WaitFor should wait until an element is removed/beforeEach.png",
  "./✓ WaitFor should wait until an element is removed/test.log",
  "./✓ _ios_ Crash Handling Should recover from app crash",
  "./✓ _ios_ Crash Handling Should recover from app crash/afterEach.png",
  "./✓ _ios_ Crash Handling Should recover from app crash/beforeEach.png",
  "./✓ _ios_ Crash Handling Should recover from app crash/test.log",
  "./✓ _ios_ Crash Handling Should throw error upon app crash",
  "./✓ _ios_ Crash Handling Should throw error upon app crash/afterEach.png",
  "./✓ _ios_ Crash Handling Should throw error upon app crash/beforeEach.png",
  "./✓ _ios_ Crash Handling Should throw error upon app crash/test.log",
  "./✓ _ios_ DatePicker datePicker should trigger change handler correctly",
  "./✓ _ios_ DatePicker datePicker should trigger change handler correctly/afterEach.png",
  "./✓ _ios_ DatePicker datePicker should trigger change handler correctly/beforeEach.png",
  "./✓ _ios_ DatePicker datePicker should trigger change handler correctly/test.log",
  "./✓ _ios_ Permissions Permissions denied",
  "./✓ _ios_ Permissions Permissions denied/afterEach.png",
  "./✓ _ios_ Permissions Permissions denied/beforeEach.png",
  "./✓ _ios_ Permissions Permissions denied/test.log",
  "./✓ _ios_ Permissions Permissions is granted",
  "./✓ _ios_ Permissions Permissions is granted/afterEach.png",
  "./✓ _ios_ Permissions Permissions is granted/beforeEach.png",
  "./✓ _ios_ Permissions Permissions is granted/test.log",
  "./✓ _ios_ User Activity Background searchable item",
  "./✓ _ios_ User Activity Background searchable item/afterEach.png",
  "./✓ _ios_ User Activity Background searchable item/beforeEach.png",
  "./✓ _ios_ User Activity Background searchable item/test.log",
  "./✓ _ios_ User Activity Foreground browsing web",
  "./✓ _ios_ User Activity Foreground browsing web/afterEach.png",
  "./✓ _ios_ User Activity Foreground browsing web/beforeEach.png",
  "./✓ _ios_ User Activity Foreground browsing web/test.log",
  "./✓ _ios_ User Activity Init from browsing web",
  "./✓ _ios_ User Activity Init from browsing web/afterEach.png",
  "./✓ _ios_ User Activity Init from browsing web/beforeEach.png",
  "./✓ _ios_ User Activity Init from browsing web/test.log",
  "./✓ _ios_ User Notifications Background calendar notification",
  "./✓ _ios_ User Notifications Background calendar notification/afterEach.png",
  "./✓ _ios_ User Notifications Background calendar notification/beforeEach.png",
  "./✓ _ios_ User Notifications Background calendar notification/test.log",
  "./✓ _ios_ User Notifications Background push notification",
  "./✓ _ios_ User Notifications Background push notification/afterEach.png",
  "./✓ _ios_ User Notifications Background push notification/beforeEach.png",
  "./✓ _ios_ User Notifications Background push notification/test.log",
  "./✓ _ios_ User Notifications Foreground calendar notifications",
  "./✓ _ios_ User Notifications Foreground calendar notifications/afterEach.png",
  "./✓ _ios_ User Notifications Foreground calendar notifications/beforeEach.png",
  "./✓ _ios_ User Notifications Foreground calendar notifications/test.log",
  "./✓ _ios_ User Notifications Foreground push notifications",
  "./✓ _ios_ User Notifications Foreground push notifications/afterEach.png",
  "./✓ _ios_ User Notifications Foreground push notifications/beforeEach.png",
  "./✓ _ios_ User Notifications Foreground push notifications/test.log",
  "./✓ _ios_ User Notifications Init from push notification",
  "./✓ _ios_ User Notifications Init from push notification/afterEach.png",
  "./✓ _ios_ User Notifications Init from push notification/beforeEach.png",
  "./✓ _ios_ User Notifications Init from push notification/test.log",
  "./✓ _ios_ location Location should be unavabilable",
  "./✓ _ios_ location Location should be unavabilable/afterEach.png",
  "./✓ _ios_ location Location should be unavabilable/beforeEach.png",
  "./✓ _ios_ location Location should be unavabilable/test.log",
  "./✓ _ios_ location Should receive location (20,20)",
  "./✓ _ios_ location Should receive location (20,20)/afterEach.png",
  "./✓ _ios_ location Should receive location (20,20)/beforeEach.png",
  "./✓ _ios_ location Should receive location (20,20)/test.log",
  "1.detox.json.log",
  "1.detox.log",
  "1.startup.log",
]
`;
