require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '13.0'

install! 'cocoapods', :deterministic_uuids => false

def shared_pods
    config = use_native_modules!

    if !ENV["REACT_NATIVE_VERSION"] || ENV["REACT_NATIVE_VERSION"].match(/0.(68|69|70).*/)
      # Flags change depending on the env values.
      flags = get_default_flags()

      use_react_native!(
        :path => config[:reactNativePath],
        :hermes_enabled => flags[:hermes_enabled],
        :fabric_enabled => flags[:fabric_enabled],
        # :flipper_configuration => FlipperConfiguration.enabled,
        # An absolute path to your application root.
        :app_path => "#{Pod::Config.instance.installation_root}/.."
      )
    else
      use_react_native!(
        # To enable hermes on iOS, change `false` to `true` and then install pods
        :hermes_enabled => false,
      )
    end
end

target 'example' do
  shared_pods
  pod 'react-native-slider', :path => '../node_modules/@react-native-community/slider'

end

target 'example_ci' do
  shared_pods
end

def __apply_update_deployment_target_workaround(installer)
  # This is a workaround for updating the deployment target of pod targets to the minimal supported version.
  # See StackOverflow: https://stackoverflow.com/questions/72729591/fbreactnativespec-h-error-after-upgrading-from-0-68-x-to-0-69-0/75915794#75915794
  puts "Applying update deployment target workaround"
  installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['SWIFT_VERSION'] = '5.0'
        if config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] < '12.4'
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.4'
        end
      end
    end
end

def __apply_Xcode_15_post_install_workaround(installer)
  # This is a workaround for Xcode 15, see: https://github.com/facebook/react-native/issues/37748.
  puts "Applying Xcode 15 post install workaround"
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', '_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION']
    end
  end
end

post_install do |installer|
  __apply_update_deployment_target_workaround(installer)
  __apply_Xcode_15_post_install_workaround(installer)

  if ENV["REACT_NATIVE_VERSION"] && ENV["REACT_NATIVE_VERSION"].match(/0.6[6,7,8,9].*/)
    react_native_post_install(installer)
  else
    react_native_post_install(
      installer,
        # Set `mac_catalyst_enabled` to `true` in order to apply patches
        # necessary for Mac Catalyst builds
        :mac_catalyst_enabled => false
    )
  end

  # See https://github.com/wix/Detox/pull/3035#discussion_r774747705
  if !ENV["REACT_NATIVE_VERSION"] || ENV["REACT_NATIVE_VERSION"].match(/0.(66|67|68|69|70).*/)
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end
end
