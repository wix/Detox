"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3206],{11470:(e,t,n)=>{n.d(t,{A:()=>x});var r=n(58168),a=n(96540),o=n(20053),i=n(23104),s=n(56347),l=n(57485),p=n(31682),u=n(89466);function c(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((({props:{value:e,label:t,attributes:n,default:r}})=>({value:e,label:t,attributes:n,default:r})))}function d(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,p.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function y({value:e,tabValues:t}){return t.some((t=>t.value===e))}function m({queryString:e=!1,groupId:t}){const n=(0,s.W6)(),r=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,l.aZ)(r),(0,a.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(n.location.search);t.set(r,e),n.replace({...n.location,search:t.toString()})}),[r,n])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,o=d(e),[i,s]=(0,a.useState)((()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!y({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[l,p]=m({queryString:n,groupId:r}),[c,g]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,r]=(0,u.Dv)(t);return[n,(0,a.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:r}),h=(()=>{const e=l??c;return y({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{h&&s(h)}),[h]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!y({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),p(e),g(e)}),[p,g,o]),tabValues:o}}var h=n(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b({className:e,block:t,selectedValue:n,selectValue:s,tabValues:l}){const p=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.a_)(),c=e=>{const t=e.currentTarget,r=p.indexOf(t),a=l[r].value;a!==n&&(u(t),s(a))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},e)},l.map((({value:e,label:t,attributes:i})=>a.createElement("li",(0,r.A)({role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,key:e,ref:e=>p.push(e),onKeyDown:d,onClick:c},i,{className:(0,o.A)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":n===e})}),t??e))))}function v({lazy:e,children:t,selectedValue:n}){const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=r.find((e=>e.props.value===n));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function w(e){const t=g(e);return a.createElement("div",{className:(0,o.A)("tabs-container",f.tabList)},a.createElement(b,(0,r.A)({},e,t)),a.createElement(v,(0,r.A)({},e,t)))}function x(e){const t=(0,h.A)();return a.createElement(w,(0,r.A)({key:String(t)},e))}},15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>m});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(n),y=a,m=c["".concat(l,".").concat(y)]||c[y]||d[y]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=y;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},19365:(e,t,n)=>{n.d(t,{A:()=>i});var r=n(96540),a=n(20053);const o={tabItem:"tabItem_Ymn6"};function i({children:e,hidden:t,className:n}){return r.createElement("div",{role:"tabpanel",className:(0,a.A)(o.tabItem,n),hidden:t},e)}},46390:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>p,toc:()=>c});var r=n(58168),a=(n(96540),n(15680)),o=n(11470),i=n(19365);const s={},l="Using TypeScript",p={unversionedId:"guide/typescript",id:"version-20.x/guide/typescript",title:"Using TypeScript",description:"This guide assumes you are using Detox's default test runner integration with Jest.",source:"@site/versioned_docs/version-20.x/guide/typescript.md",sourceDirName:"guide",slug:"/guide/typescript",permalink:"/Detox/docs/guide/typescript",draft:!1,editUrl:"https://github.com/wix/Detox/edit/master/docs/versioned_docs/version-20.x/guide/typescript.md",tags:[],version:"20.x",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Parallel Test Execution",permalink:"/Detox/docs/guide/parallel-test-execution"},next:{title:"Testing WebViews",permalink:"/Detox/docs/guide/testing-webviews"}},u={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setting up Jest with TypeScript",id:"setting-up-jest-with-typescript",level:2},{value:"Writing Detox Tests in TypeScript",id:"writing-detox-tests-in-typescript",level:2},{value:"Conclusion",id:"conclusion",level:2}],d={toc:c},y="wrapper";function m({components:e,...t}){return(0,a.yg)(y,(0,r.A)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"using-typescript"},"Using TypeScript"),(0,a.yg)("admonition",{type:"info"},(0,a.yg)("p",{parentName:"admonition"},"This guide assumes you are using Detox's default test runner integration with Jest.\nIf you have a custom integration, you need to consult your test runner's documentation\non how to use TypeScript with it.")),(0,a.yg)("p",null,"It is very common among JavaScript developers to use TypeScript in their projects,\nso a question arises: ",(0,a.yg)("strong",{parentName:"p"},"how to use Detox with TypeScript?")," Since Detox by default\nbases on Jest, the question can be rephrased as: ",(0,a.yg)("a",{parentName:"p",href:"https://jestjs.io/docs/getting-started#using-typescript"},"how to use Jest with TypeScript?"),"."),(0,a.yg)("p",null,"Nevertheless, since many people ask about it, we decided to provide a guide on how to use Detox with TypeScript."),(0,a.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"A working Detox setup with Jest as your test runner."),(0,a.yg)("li",{parentName:"ul"},"TypeScript installed in your project.")),(0,a.yg)("p",null,"Since React Native 0.71, the default React Native project template comes with TypeScript support out of the box. However, if you have no TypeScript project, now's the time:"),(0,a.yg)(o.A,{groupId:"npm2yarn",mdxType:"Tabs"},(0,a.yg)(i.A,{value:"npm",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev typescript\ntsc --init\n"))),(0,a.yg)(i.A,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"yarn add --dev typescript\ntsc --init\n"))),(0,a.yg)(i.A,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"pnpm add --save-dev typescript\ntsc --init\n")))),(0,a.yg)("p",null,"The latter command will generate a default ",(0,a.yg)("inlineCode",{parentName:"p"},"tsconfig.json")," file, so that you can modify it to suit your needs."),(0,a.yg)("admonition",{type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"If you get an error like:"),(0,a.yg)("pre",{parentName:"admonition"},(0,a.yg)("code",{parentName:"pre",className:"language-plain",metastring:"text",text:!0},"command not found: tsc\n")),(0,a.yg)("p",{parentName:"admonition"},"You can try to:"),(0,a.yg)("ol",{parentName:"admonition"},(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("inlineCode",{parentName:"li"},"export PATH=$PATH:./node_modules/.bin")," if you are using ",(0,a.yg)("inlineCode",{parentName:"li"},"bash")," or ",(0,a.yg)("inlineCode",{parentName:"li"},"zsh"),"."),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("inlineCode",{parentName:"li"},"set PATH=%PATH%;./node_modules/.bin")," if you are using Windows Command Prompt."),(0,a.yg)("li",{parentName:"ol"},"run ",(0,a.yg)("inlineCode",{parentName:"li"},"npx tsc --init")," instead of ",(0,a.yg)("inlineCode",{parentName:"li"},"tsc --init"),"."),(0,a.yg)("li",{parentName:"ol"},"or any other solution to run an executable from ",(0,a.yg)("inlineCode",{parentName:"li"},"node_modules/.bin")," directory."))),(0,a.yg)("p",null,"Make sure your TypeScript compiles without errors before proceeding:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"tsc # or tsc --noEmit if you don't want to generate output files\n")),(0,a.yg)("h2",{id:"setting-up-jest-with-typescript"},"Setting up Jest with TypeScript"),(0,a.yg)("p",null,"Jest requires a few extra packages to work seamlessly with TypeScript, so let's install them:"),(0,a.yg)(o.A,{groupId:"npm2yarn",mdxType:"Tabs"},(0,a.yg)(i.A,{value:"npm",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev ts-jest @types/jest @types/node\n"))),(0,a.yg)(i.A,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"yarn add --dev ts-jest @types/jest @types/node\n"))),(0,a.yg)(i.A,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"pnpm add --save-dev ts-jest @types/jest @types/node\n")))),(0,a.yg)("p",null,"Your Jest config file at ",(0,a.yg)("inlineCode",{parentName:"p"},"e2e/jest.config.js")," (or wherever you keep your Jest configuration) also needs a couple of tweaks:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},"/** @type {import('@jest/types').Config.InitialOptions} */\nmodule.exports = {\n// highlight-next-line\n  preset: 'ts-jest', // (1)\n  rootDir: '..',\n// highlight-next-line\n  testMatch: ['<rootDir>/e2e/**/*.test.ts'], // (2)\n  testTimeout: 120000,\n  maxWorkers: 1,\n  globalSetup: 'detox/runners/jest/globalSetup',\n  globalTeardown: 'detox/runners/jest/globalTeardown',\n  reporters: ['detox/runners/jest/reporter'],\n  testEnvironment: 'detox/runners/jest/testEnvironment',\n  verbose: true,\n};\n")),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"The ",(0,a.yg)("inlineCode",{parentName:"p"},"preset")," option tells Jest to use ",(0,a.yg)("inlineCode",{parentName:"p"},"ts-jest")," to compile TypeScript files. This is the most important part of the setup.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Make sure you update your ",(0,a.yg)("inlineCode",{parentName:"p"},"testMatch")," to include TypeScript files. Otherwise, you are likely to get an error like this:"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-plain",metastring:"text",text:!0},"No tests found, exiting with code 1\nRun with `--passWithNoTests` to exit with code 0\nIn /path/to/your/project\n  60 files checked.\n  testMatch: /path/to/your/project/e2e/**/*.test.js - 0 matches\n  testPathIgnorePatterns: /node_modules/ - 60 matches\n  testRegex:  - 0 matches\nPattern:  - 0 matches\n")))),(0,a.yg)("h2",{id:"writing-detox-tests-in-typescript"},"Writing Detox Tests in TypeScript"),(0,a.yg)("p",null,"With the setup ready, you can now write Detox tests in TypeScript.\nChange file extensions from ",(0,a.yg)("inlineCode",{parentName:"p"},".js")," to ",(0,a.yg)("inlineCode",{parentName:"p"},".ts")," where appropriate, and you\u2019re good to go."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-typescript"},"// highlight-next-line\nimport { expect } from 'detox';\n\ndescribe('Login Screen', () => {\n it('should login with correct credentials', async () => {\n   const email: string = 'test@example.com';\n   const password: string = 'password123';\n\n   await element(by.id('emailInput')).typeText(email);\n   await element(by.id('passwordInput')).typeText(password);\n   await element(by.id('loginButton')).tap();\n\n   expect(await element(by.id('welcomeMessage'))).toBeVisible();\n });\n});\n")),(0,a.yg)("admonition",{type:"info"},(0,a.yg)("p",{parentName:"admonition"},"Pay attention at the highlighted line above, where we import ",(0,a.yg)("inlineCode",{parentName:"p"},"expect")," from Detox. Unfortunately, there is ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/wix/Detox/issues/2610"},"an unresolved clash")," between Jest's ",(0,a.yg)("inlineCode",{parentName:"p"},"expect")," and Detox's ",(0,a.yg)("inlineCode",{parentName:"p"},"expect")," when using TypeScript. This will be fixed in the future, but for now, you need to import Detox's ",(0,a.yg)("inlineCode",{parentName:"p"},"expect")," explicitly in case you see errors like this:"),(0,a.yg)("pre",{parentName:"admonition"},(0,a.yg)("code",{parentName:"pre",className:"language-plain",metastring:"text",text:!0},"error TS2339: Property 'toBeVisible' does not exist on type 'JestMatchers<IndexableNativeElement>'.\n"))),(0,a.yg)("h2",{id:"conclusion"},"Conclusion"),(0,a.yg)("p",null,"Using Detox with TypeScript largely boils down to setting up Jest to understand TypeScript. With the power of static typing, your Detox tests can now become more robust, easier to understand, and less error-prone. Happy testing!"))}m.isMDXComponent=!0}}]);