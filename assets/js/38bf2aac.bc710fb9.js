"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[2377],{11470:(e,t,n)=>{n.d(t,{A:()=>v});var a=n(58168),o=n(96540),i=n(20053),r=n(23104),s=n(56347),l=n(57485),p=n(31682),g=n(89466);function u(e){return function(e){return o.Children.map(e,e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}(e).map(({props:{value:e,label:t,attributes:n,default:a}})=>({value:e,label:t,attributes:n,default:a}))}function d(e){const{values:t,children:n}=e;return(0,o.useMemo)(()=>{const e=t??u(n);return function(e){const t=(0,p.X)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}function c({value:e,tabValues:t}){return t.some(t=>t.value===e)}function m({queryString:e=!1,groupId:t}){const n=(0,s.W6)(),a=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,l.aZ)(a),(0,o.useCallback)(e=>{if(!a)return;const t=new URLSearchParams(n.location.search);t.set(a,e),n.replace({...n.location,search:t.toString()})},[a,n])]}function y(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=d(e),[r,s]=(0,o.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!c({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find(e=>e.default)??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:i})),[l,p]=m({queryString:n,groupId:a}),[u,y]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,a]=(0,g.Dv)(t);return[n,(0,o.useCallback)(e=>{t&&a.set(e)},[t,a])]}({groupId:a}),h=(()=>{const e=l??u;return c({value:e,tabValues:i})?e:null})();(0,o.useLayoutEffect)(()=>{h&&s(h)},[h]);return{selectedValue:r,selectValue:(0,o.useCallback)(e=>{if(!c({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);s(e),p(e),y(e)},[p,y,i]),tabValues:i}}var h=n(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f({className:e,block:t,selectedValue:n,selectValue:s,tabValues:l}){const p=[],{blockElementScrollPositionUntilNextRender:g}=(0,r.a_)(),u=e=>{const t=e.currentTarget,a=p.indexOf(t),o=l[a].value;o!==n&&(g(t),s(o))},d=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},e)},l.map(({value:e,label:t,attributes:r})=>o.createElement("li",(0,a.A)({role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,key:e,ref:e=>p.push(e),onKeyDown:d,onClick:u},r,{className:(0,i.A)("tabs__item",b.tabItem,r?.className,{"tabs__item--active":n===e})}),t??e)))}function x({lazy:e,children:t,selectedValue:n}){const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=a.find(e=>e.props.value===n);return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},a.map((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==n})))}function N(e){const t=y(e);return o.createElement("div",{className:(0,i.A)("tabs-container",b.tabList)},o.createElement(f,(0,a.A)({},e,t)),o.createElement(x,(0,a.A)({},e,t)))}function v(e){const t=(0,h.A)();return o.createElement(N,(0,a.A)({key:String(t)},e))}},16392:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/embed-detox-project-13a3184c5b6f136a0537b8c2fc57347b.png"},19365:(e,t,n)=>{n.d(t,{A:()=>r});var a=n(96540),o=n(20053);const i={tabItem:"tabItem_Ymn6"};function r({children:e,hidden:t,className:n}){return a.createElement("div",{role:"tabpanel",className:(0,o.A)(i.tabItem,n),hidden:t},e)}},22115:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/putting-a-breakpoint-d12086f5097b61ba8c10fb8caab3f574.png"},49767:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/android-happy-debugging-6d0b46e69ac6e09e311d0b6fb051f26a.png"},53463:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/stopped-at-breakpoint-6d8084532c1fad3d6cb53fd507fc22a9.png"},55108:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/inspect-brk-1f9ff60afe8fa89209a9c8fa27ea7299.png"},56109:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/android-studio-debug-configuration-1ed2ae95a29d7c1632b0ef0df8d5f13c.png"},59357:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/new-configuration-5c585e687427f26cee8c46fb92c50adc.png"},69529:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/drag-src-to-project-31530917b943a4034be35eaa96cf2379.png"},73675:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/node-debug-configuration-8426af2b225ab1247ff296692400e3e4.png"},74170:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/run-debug-configuration-c880df4bf171947516272c97cf861460.png"},78621:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/breakpoint-542147deaa0700ca4abe01e9da6cf790.png"},78799:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/extracted-ios-src-ae12bd6e062f06e7e7e1f41e3746edd9.png"},82051:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>F,contentTitle:()=>_,default:()=>H,frontMatter:()=>W,metadata:()=>q,toc:()=>B});var a=n(58168),o=n(96540),i=n(15680),r=n(22355),s=n(11470),l=n(19365);const p={toc:[{value:"Set up a breakpoint",id:"set-up-a-breakpoint",level:4},{value:"Create &amp; Run a debug configuration",id:"create--run-a-debug-configuration",level:4}]},g="wrapper";function u({components:e,...t}){return(0,i.yg)(g,(0,a.A)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"Open your app project (where there tests are, among other things) on Webstorm."),(0,i.yg)("h4",{id:"set-up-a-breakpoint"},"Set up a breakpoint"),(0,i.yg)("p",null,"Open the file where the test you wish to run is. Mark it as ",(0,i.yg)("inlineCode",{parentName:"p"},"it.only"),", and set up a breakpoint in a line that suites your needs (note: This can actually be inside a helper function or a test-driver's function):"),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"Webstorm breakpoint",src:n(78621).A,width:"823",height:"286"})),(0,i.yg)("h4",{id:"create--run-a-debug-configuration"},"Create & Run a debug configuration"),(0,i.yg)("p",null,"Go to Webstorm's ",(0,i.yg)("a",{parentName:"p",href:"https://www.jetbrains.com/help/webstorm/run-debug-configuration.html"},(0,i.yg)("inlineCode",{parentName:"a"},"Edit Configurations")),"."),(0,i.yg)("p",null,"Tap the ",(0,i.yg)("inlineCode",{parentName:"p"},"+")," button and select the Node.js option:"),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"Webstorm edit configurations",src:n(59357).A,width:"280",height:"495"})),(0,i.yg)("p",null,"Create a new debugging configuration using the default arguments (port 9229, etc.):"),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"Webstorm node debugging configuration",src:n(73675).A,width:"867",height:"744"})),(0,i.yg)("p",null,'Attach to Detox by "debugging" the new configuration (start it using the beetle button).'),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"Webstorm start debug configuration",src:n(74170).A,width:"395",height:"62"})),(0,i.yg)("p",null,"Let Detox run until stopped at the break-point:"),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"Webstorm stopped at breakpoint",src:n(53463).A,width:"730",height:"91"})),(0,i.yg)("p",null,"Run step-by-step using Webstorm's debugging actions (step-over, step-into, etc.)"),(0,i.yg)("p",null,"Happy debugging!"))}u.isMDXComponent=!0;const d={toc:[]},c="wrapper";function m({components:e,...t}){return(0,i.yg)(c,(0,a.A)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"Edit your test file. Mark the test you wish to debug as ",(0,i.yg)("inlineCode",{parentName:"p"},"it.only"),", and then add a ",(0,i.yg)("inlineCode",{parentName:"p"},"debugger")," statement\ninside your test to mark a starting point, e.g.:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-diff",metastring:'title="e2e/starter.test.js"',title:'"e2e/starter.test.js"'}," describe('Example', () => {\n   beforeAll(async () => {\n     await device.launchApp();\n   });\n   \n-   it('should debug nicely :-)', async () => {\n+   it.only('should debug nicely :-)', async () => {\n     await element(by.text('Filter')).tap();\n+     debugger;\n\n   });\n")),(0,i.yg)("p",null,"Open ",(0,i.yg)("inlineCode",{parentName:"p"},"Google Chrome")," and go to ",(0,i.yg)("inlineCode",{parentName:"p"},"chrome://inspect")," tab, where you'll see ",(0,i.yg)("inlineCode",{parentName:"p"},"./node_modules/.bin/jest")," as a remote\ntarget waiting until you click ",(0,i.yg)("inlineCode",{parentName:"p"},"inspect")," to attach to it."),(0,i.yg)("p",null,(0,i.yg)("img",{src:n(55108).A,width:"835",height:"388"})),(0,i.yg)("p",null,"Happy debugging!"))}m.isMDXComponent=!0;const y={toc:[]},h="wrapper";function b({components:e,...t}){return(0,i.yg)(h,(0,a.A)({},y,t,{components:e,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"Coming soon!"))}b.isMDXComponent=!0;const f={toc:[]},x="wrapper";function N({components:e,...t}){return(0,i.yg)(x,(0,a.A)({},f,t,{components:e,mdxType:"MDXLayout"}),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Go to ",(0,i.yg)("inlineCode",{parentName:"p"},"node_modules/detox")," and extract ",(0,i.yg)("inlineCode",{parentName:"p"},"Detox-ios-src.tbz")),(0,i.yg)("p",{parentName:"li"},(0,i.yg)("img",{alt:"extracted detox-ios-src directory",src:n(78799).A,width:"817",height:"460"}))),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Drag ",(0,i.yg)("inlineCode",{parentName:"p"},"Detox-ios-src/Detox.xcodeproj")," into your Xcode project"),(0,i.yg)("p",{parentName:"li"},(0,i.yg)("img",{alt:"Detox inside Xcode project",src:n(69529).A,width:"269",height:"284"}))),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Go to your project settings \u2192 ",(0,i.yg)("strong",{parentName:"p"},"General")," and add ",(0,i.yg)("strong",{parentName:"p"},"Detox.framework")," to ",(0,i.yg)("strong",{parentName:"p"},"Frameworks, Libraries, and Embedded Content")," (make sure ",(0,i.yg)("strong",{parentName:"p"},"Embed & Sign")," is selected under ",(0,i.yg)("strong",{parentName:"p"},"Embed"),")"),(0,i.yg)("p",{parentName:"li"},(0,i.yg)("img",{alt:"embed Detox",src:n(16392).A,width:"675",height:"230"})))),(0,i.yg)("admonition",{type:"caution"},(0,i.yg)("p",{parentName:"admonition"},"Apps should not be submitted to the App Store with the Detox framework linked. Follow this guide only to debug Detox issues in your project. Once finished, make sure to remove ",(0,i.yg)("strong",{parentName:"p"},"Detox.framework")," from your project.")))}N.isMDXComponent=!0;const v={toc:[]},w="wrapper";function A({components:e,...t}){return(0,i.yg)(w,(0,a.A)({},v,t,{components:e,mdxType:"MDXLayout"}),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Add in your Android project settings:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-diff",metastring:'title="android/settings.gradle"',title:'"android/settings.gradle"'},"+include ':detox'\n+project(':detox').projectDir = new File(rootProject.projectDir, '../node_modules/detox/android/detox')\n"))),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"In your ",(0,i.yg)("em",{parentName:"p"},"root")," build script register ",(0,i.yg)("inlineCode",{parentName:"p"},"google()")," as a repository lookup point in all projects:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-diff",metastring:'title="android/build.gradle"',title:'"android/build.gradle"'}," allprojects {\n     repositories {\n         // ...\n+        google()\n     }\n }\n")),(0,i.yg)("p",{parentName:"li"},"If ",(0,i.yg)("inlineCode",{parentName:"p"},"allprojects")," section doesn't exist, then add it.")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"In your app\u2019s build script, add to ",(0,i.yg)("inlineCode",{parentName:"p"},"dependencies")," section:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-diff",metastring:'title="android/app/build.gradle"',title:'"android/app/build.gradle"'}," dependencies {\n     // ...\n-    androidTestImplementation('com.wix:detox:+')\n+    androidTestImplementation(project(path: \":detox\"))\n }\n"))),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Stay in that file, just scroll down and add to the ",(0,i.yg)("inlineCode",{parentName:"p"},"defaultConfig")," subsection:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-diff",metastring:'title="android/app/build.gradle"',title:'"android/app/build.gradle"'}," android {\n   // ...\n\n   defaultConfig {\n       // ...\n+      testBuildType System.getProperty('testBuildType', 'debug')  // This will later be used to control the test apk build type\n+      testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'\n+      missingDimensionStrategy 'detox', 'full'\n   }\n }\n")))))}A.isMDXComponent=!0;const T={toc:[]},D="wrapper";function C({components:e,...t}){return(0,i.yg)(D,(0,a.A)({},T,t,{components:e,mdxType:"MDXLayout"}),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "devices": {\n    "simulator": {\n      "type": "ios.simulator",\n      "device": {\n        "type": "<e.g., iPhone 12 Pro>"\n      }\n    }\n  },\n  "apps": {\n    "ios.debug": {\n      "type": "ios.app",\n      "binaryPath": "<path to your app binary built before>"\n    }\n  },\n  "configurations": {\n// highlight-start\n    "ios.manual": {\n      "device": "simulator",\n      "app": "ios.debug",\n      "behavior": {\n        "launchApp": "manual"\n      }\n    }\n// highlight-end\n  }\n}\n')))}C.isMDXComponent=!0;const k={toc:[]},I="wrapper";function S({components:e,...t}){return(0,i.yg)(I,(0,a.A)({},k,t,{components:e,mdxType:"MDXLayout"}),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "devices": {\n    "emulator": {\n      "type": "android.emulator",\n      "device": {\n        "avdName": "<e.g., Pixel_API_28>"\n      }\n    }\n  },\n  "apps": {\n    "android.debug": {\n      "type": "android.apk",\n      "binaryPath": "<path to your app binary built before>"\n    }\n  },\n  "configurations": {\n// highlight-start\n    "android.manual": {\n      "device": "emulator",\n      "app": "android.debug",\n      "behavior": {\n        "launchApp": "manual"\n      }\n    }\n// highlight-end\n  }\n}\n')))}S.isMDXComponent=!0;const j={toc:[]},E="wrapper";function M({components:e,...t}){return(0,i.yg)(E,(0,a.A)({},j,t,{components:e,mdxType:"MDXLayout"}),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-plain",metastring:"text",text:!0},"18:26:07.024 detox[45214] i Waiting for you to manually launch your app in Xcode.\nMake sure to pass the launch arguments listed below:\n  -detoxServer ws://localhost:8099\n  -detoxSessionId com.wix.detox-example\n\nPress any key to continue...\n")),(0,i.yg)("p",null,"You\u2019ll need to run your app with the said arguments from Xcode:"),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"Xcode - Edit Schema - Arguments tab",src:n(84681).A,width:"897",height:"505"})),(0,i.yg)("p",null,"Before you launch the app, make sure to ",(0,i.yg)("a",{parentName:"p",href:"https://developer.apple.com/documentation/xcode/setting-breakpoints-to-pause-your-running-app"},"put breakpoints")," at the points of interest, e.g.:"),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"put a breakpoint in the native code",src:n(22115).A,width:"457",height:"88"})),(0,i.yg)("p",null,"Launch the app with the debugger attached:"),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"launching the app",src:n(83196).A,width:"420",height:"882"})),(0,i.yg)("p",null,"The moment you see the app is idle, go back to the Terminal where Detox is running\nand press any key. If you wish to terminate the process for some reason, use Ctrl+C.\nIn a couple of seconds you are expected to see a confirmation from Detox, e.g.:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-plain",metastring:"text",text:!0},"Found the app (com.wix.detox-example) with process ID = 16854. Proceeding...\n")),(0,i.yg)("p",null,"Now the entire test will run as usual until it sends an action to the app, which gets trapped\nin your breakpoint."),(0,i.yg)("p",null,"Happy debugging!"))}M.isMDXComponent=!0;const L={toc:[]},X="wrapper";function O({components:e,...t}){return(0,i.yg)(X,(0,a.A)({},L,t,{components:e,mdxType:"MDXLayout"}),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-plain",metastring:"text",text:!0},"18:26:07.024 detox[45214] i Waiting for you to manually launch your app in Android Studio.\n\nInstrumentation class: com.wix.detox.test.test/com.example.DetoxTestAppJUnitRunner\nInstrumentation arguments:\n------------------------------------\nKey            | Value\n------------------------------------\ndetoxServer    | ws://localhost:8099\ndetoxSessionId | test\n------------------------------------\n\nPress any key to continue...\n")),(0,i.yg)("p",null,"Now it is time to switch back to Android Studio. You\u2019ll need to run your instrumentation runner with the said arguments,\nthis is why you should create a debug configuration of ",(0,i.yg)("inlineCode",{parentName:"p"},"Android Instrumented Tests")," type similar to the one below:"),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"Android Debug Configuration - Android Instrumented Tests",src:n(56109).A,width:"1183",height:"788"})),(0,i.yg)("p",null,"Make sure to put breakpoints at the points of interest before you start the app."),(0,i.yg)("p",null,"After the app is launched, go back to the Terminal where Detox is running and press any key.\nAs a result, you are expected to see a confirmation from Detox, e.g.:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-plain",metastring:"text",text:!0},"Found the app (com.wix.detox-example) with process ID = 16854. Proceeding...\n")),(0,i.yg)("p",null,"Now the entire test will run as usual until it sends an action to the app, which gets trapped\nin your breakpoint."),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"Breakpoint is active",src:n(49767).A,width:"530",height:"249"})),(0,i.yg)("p",null,"Happy debugging!"))}O.isMDXComponent=!0;const R={toc:[]},P="wrapper";function V({components:e,...t}){return(0,i.yg)(P,(0,a.A)({},R,t,{components:e,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"Here are some known issues you can solve on your own:"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"DetoxWSClient: Retrying... At connectToServer")),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-plain",metastring:"text",text:!0},"I/DetoxWSClient: At connectToServer\nD/DetoxWSClient: Retrying...\n")),(0,i.yg)("p",{parentName:"li"},"If you see the repeatedly printed messages like above in Android application logs, it's likely\nthat your port is not reversed. Assuming you're following the tutorial and ",(0,i.yg)("inlineCode",{parentName:"p"},"detoxServer")," address\nis ",(0,i.yg)("inlineCode",{parentName:"p"},"ws://localhost:8099")," (if not \u2013 check what Detox prints you), reverse the port on your device\nusing ADB:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"adb reverse tcp:8099 tcp:8099\n"))),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Waited for the new RN-context for too long!")),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-plain",metastring:"text",text:!0},"Waited for the new RN-context for too long! (60 seconds)\nIf you think that\u2019s not long enough, consider applying a custom Detox runtime-config in DetoxTest.runTests().\n")),(0,i.yg)("p",{parentName:"li"},"If you see an error like above, you can patch Detox code to disable the timeout here:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-diff",metastring:'title="detox/android/detox/src/main/java/com/wix/detox/config/DetoxConfig.kt"',title:'"detox/android/detox/src/main/java/com/wix/detox/config/DetoxConfig.kt"'}," package com.wix.detox.config\n\n class DetoxConfig {\n     @JvmField var idlePolicyConfig: DetoxIdlePolicyConfig = DetoxIdlePolicyConfig()\n-    @JvmField var rnContextLoadTimeoutSec = 60\n+    @JvmField var rnContextLoadTimeoutSec = Int.MAX_VALUE\n\n     fun apply() {\n         idlePolicyConfig.apply()\n")))))}V.isMDXComponent=!0;const W={},_="How to Debug",q={unversionedId:"introduction/debugging",id:"version-20.x/introduction/debugging",title:"How to Debug",description:"In the Detox world, you can debug either Detox itself (i.e. run it step by step), and the tested app. This guide covers both options.",source:"@site/versioned_docs/version-20.x/introduction/debugging.mdx",sourceDirName:"introduction",slug:"/introduction/debugging",permalink:"/Detox/docs/introduction/debugging",draft:!1,editUrl:"https://github.com/wix/Detox/edit/master/docs/versioned_docs/version-20.x/introduction/debugging.mdx",tags:[],version:"20.x",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Your First Test",permalink:"/Detox/docs/introduction/your-first-test"},next:{title:"Preparing for CI",permalink:"/Detox/docs/introduction/preparing-for-ci"}},F={},B=[{value:"Running Detox Tests Step-by-Step",id:"running-detox-tests-step-by-step",level:2},{value:"Debugging JavaScript application code",id:"debugging-javascript-application-code",level:2},{value:"Debugging Native application code",id:"debugging-native-application-code",level:2},{value:"Setting Detox up as a compiling dependency",id:"setting-detox-up-as-a-compiling-dependency",level:3},{value:"Add a &quot;manual&quot; configuration to your Detox config",id:"add-a-manual-configuration-to-your-detox-config",level:3},{value:"Run a specific test",id:"run-a-specific-test",level:3},{value:"Troubleshooting",id:"troubleshooting",level:3}],J={toc:B},U="wrapper";function H({components:e,...t}){return(0,i.yg)(U,(0,a.A)({},J,t,{components:e,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"how-to-debug"},"How to Debug"),(0,i.yg)("p",null,"In the Detox world, you can debug either Detox itself (i.e. run it step by step), and the tested app. This guide covers both options."),(0,i.yg)("h2",{id:"running-detox-tests-step-by-step"},"Running Detox Tests Step-by-Step"),(0,i.yg)("p",null,"Detox tests can be run step-by-step either using an IDE or by using Chrome debugger."),(0,i.yg)("admonition",{title:"New in Detox",type:"tip"},(0,i.yg)("p",{parentName:"admonition"},"Detox now supports an interactive ",(0,i.yg)("strong",{parentName:"p"},"REPL")," (Read-Eval-Print Loop) mode for debugging. You can explore app state, issue commands, or pause test execution \u2014 all in real time."),(0,i.yg)("p",{parentName:"admonition"},"Enable it via ",(0,i.yg)("inlineCode",{parentName:"p"},"--repl")," CLI argument and add ",(0,i.yg)("inlineCode",{parentName:"p"},"await detox.REPL()")," in test code."),(0,i.yg)("p",{parentName:"admonition"},"\u2192 ",(0,i.yg)("a",{parentName:"p",href:"/Detox/docs/guide/detox-repl"},(0,i.yg)("strong",{parentName:"a"},"See full guide")))),(0,i.yg)("p",null,"Start by running Detox using the Detox CLI alongside the inspection argument (",(0,i.yg)("inlineCode",{parentName:"p"},"--inspect-brk"),") and the file in which the test resides. For example:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"detox test --inspect-brk -c android.emu.debug e2e/starter.test.js\n")),(0,i.yg)("p",null,"You will see Detox starts and these logs:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-plain",metastring:"text",text:!0},"Debugger listening on ws://127.0.0.1:9229/3dedd03b-8896-4ab8-a0a8-1b647abb9c98\nFor help, see: https://nodejs.org/en/docs/inspector\n")),(0,i.yg)("p",null,"Now you can attach to Detox and tap-in into its execution process."),(0,i.yg)("admonition",{type:"info"},(0,i.yg)("p",{parentName:"admonition"},"To learn more about debugging with ",(0,i.yg)("inlineCode",{parentName:"p"},"--inspect-brk"),", refer to ",(0,i.yg)("a",{parentName:"p",href:"https://nodejs.org/en/docs/guides/debugging-getting-started/"},"Debugging \u2014 Getting Started")," on the official Node.js website.")),(0,i.yg)(s.A,{groupId:"debuggerAttach",mdxType:"Tabs"},(0,i.yg)(l.A,{value:"Webstorm",label:"Webstorm",default:!0,mdxType:"TabItem"},(0,i.yg)(u,{mdxType:"DebuggerAttachWebstorm"})),(0,i.yg)(l.A,{value:"vs-code",label:"vs-code",mdxType:"TabItem"},(0,i.yg)(b,{mdxType:"DebuggerAttachVscode"})),(0,i.yg)(l.A,{value:"Chrome",label:"Chrome",mdxType:"TabItem"},(0,i.yg)(m,{mdxType:"DebuggerAttachChrome"}))),(0,i.yg)("h2",{id:"debugging-javascript-application-code"},"Debugging JavaScript application code"),(0,i.yg)("p",null,"Use debug configurations of your app that rely on React Native Packager running on port 8081 (or another):"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"ios.sim.debug")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"android.emu.debug"))),(0,i.yg)("p",null,"For the rest of details, please refer to ",(0,i.yg)("a",{parentName:"p",href:"https://reactnative.dev/docs/debugging"},"React Native \u2013 Debugging"),"."),(0,i.yg)("h2",{id:"debugging-native-application-code"},"Debugging Native application code"),(0,i.yg)("h3",{id:"setting-detox-up-as-a-compiling-dependency"},"Setting Detox up as a compiling dependency"),(0,i.yg)("admonition",{title:"Note",type:"info"},(0,i.yg)("p",{parentName:"admonition"},"This step is optional. It is intended for investigating weird crashes or when contributing to Detox itself.")),(0,i.yg)(s.A,{groupId:"mobileOs",mdxType:"Tabs"},(0,i.yg)(l.A,{value:"iOS",label:"iOS",default:!0,mdxType:"TabItem"},(0,i.yg)(N,{mdxType:"CompilingIOS"})),(0,i.yg)(l.A,{value:"Android",label:"Android",mdxType:"TabItem"},(0,i.yg)(A,{mdxType:"CompilingAndroid"}))),(0,i.yg)("h3",{id:"add-a-manual-configuration-to-your-detox-config"},'Add a "manual" configuration to your Detox config'),(0,i.yg)(s.A,{groupId:"mobileOs",mdxType:"Tabs"},(0,i.yg)(l.A,{value:"iOS",label:"iOS",default:!0,mdxType:"TabItem"},(0,i.yg)(C,{mdxType:"ConfigIOS"})),(0,i.yg)(l.A,{value:"Android",label:"Android",mdxType:"TabItem"},(0,i.yg)(S,{mdxType:"ConfigAndroid"}))),(0,i.yg)("p",null,"While the ",(0,i.yg)("inlineCode",{parentName:"p"},"behavior")," section is a ",(0,i.yg)("strong",{parentName:"p"},"mandatory")," thing to include, there are a few more optional\nparameters to disable various side effects and make life easier when debugging:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-diff"},' {\n   \u2026\n   "configurations": {\n     "<your configuration>": {\n       \u2026\n       "behavior": {\n         "launchApp": "manual"\n       },\n+      "session": {\n+        "autoStart": true,\n+        "debugSynchronization": 0,\n+        "server": "ws://localhost:8099",\n+        "sessionId": "test"\n+      },\n+      "testRunner": {\n+        "args": {\n+          "testTimeout": 999999\n+        }\n+      }\n+      "artifacts": false\n     },\n   }\n }\n')),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Using a preconfigured ",(0,i.yg)("inlineCode",{parentName:"p"},"session")," with an auto-starting server removes the legwork of copying and\npasting values to the instrumentation runner launch arguments dialog every time before any launch\nfrom the IDE. Otherwise, by default when the ",(0,i.yg)("inlineCode",{parentName:"p"},"session")," object omitted, ",(0,i.yg)("inlineCode",{parentName:"p"},"server")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"sessionId"),"\nare randomly generated for every new test session.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"The ",(0,i.yg)("inlineCode",{parentName:"p"},"debugSynchronization: 0")," override matters only if you have a global ",(0,i.yg)("inlineCode",{parentName:"p"},"session")," config\nwith ",(0,i.yg)("inlineCode",{parentName:"p"},"debugSynchronization")," set to a positive integer value. Otherwise, it is not needed. The point\nis to disable regular app polling requests during debugging, since that only can hinder the debugging.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"If you are using Jest as a test runner, you might want to prolong the test timeout via forwarding\n",(0,i.yg)("inlineCode",{parentName:"p"},"--testTimeout 999999")," to it.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Setting ",(0,i.yg)("inlineCode",{parentName:"p"},"artifacts: false")," override also matters only if you have a global ",(0,i.yg)("inlineCode",{parentName:"p"},"artifacts")," config.\nThe motivation is to disable irrelevant taxing activities on the device such as capturing logs\nscreenshots, videos and so on. If your investigation addresses a specific artifact plugin glitch\non the native side, then just disable all the non-relevant plugins. See\n",(0,i.yg)("a",{parentName:"p",href:"/Detox/docs/config/artifacts"},"Configuration > Artifacts")," document for the reference."))),(0,i.yg)("h3",{id:"run-a-specific-test"},"Run a specific test"),(0,i.yg)("p",null,"Usually, you would want to focus on a specific test suite to save time, e.g.:"),(0,i.yg)(s.A,{groupId:"mobileOs",mdxType:"Tabs"},(0,i.yg)(l.A,{value:"iOS",label:"iOS",mdxType:"TabItem"},(0,i.yg)(r.A,{language:"sh",mdxType:"CodeBlock"},"detox test -c ios.manual e2e/someSuite.test.js")),(0,i.yg)(l.A,{value:"Android",label:"Android",mdxType:"TabItem"},(0,i.yg)(r.A,{language:"sh",mdxType:"CodeBlock"},"detox test -c android.manual e2e/someSuite.test.js"))),(0,i.yg)("admonition",{type:"caution"},(0,i.yg)("p",{parentName:"admonition"},"Don't use multiple workers, e.g. ",(0,i.yg)("inlineCode",{parentName:"p"},"-w, --maxWorkers")," for Jest, if you set ",(0,i.yg)("inlineCode",{parentName:"p"},"session.sessionId")," to a constant value.")),(0,i.yg)("p",null,"Afterwards, you should see your test suite starting as usual until it reaches the app launch, where\nDetox stops instead and prompts you to launch the app from the IDE:"),(0,i.yg)(s.A,{groupId:"mobileOs",mdxType:"Tabs"},(0,i.yg)(l.A,{value:"iOS",label:"iOS",mdxType:"TabItem"},(0,i.yg)(M,{mdxType:"RunIos"})),(0,i.yg)(l.A,{value:"Android",label:"Android",mdxType:"TabItem"},(0,i.yg)(O,{mdxType:"RunAndroid"}))),(0,i.yg)("h3",{id:"troubleshooting"},"Troubleshooting"),(0,i.yg)(s.A,{groupId:"mobileOs",mdxType:"Tabs"},(0,i.yg)(l.A,{value:"iOS",label:"iOS",mdxType:"TabItem"},(0,i.yg)(o.Fragment,null,"There are no known issues at the moment. Check out ",(0,i.yg)("b",null,"Android")," tab if you need some.")),(0,i.yg)(l.A,{value:"Android",label:"Android",mdxType:"TabItem"},(0,i.yg)(V,{mdxType:"TroubleshootingAndroid"}))))}H.isMDXComponent=!0},83196:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/launch-app-with-debugger-b16ad3d8e537e0bfe0b5e007489db914.png"},84681:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/edit-schema-arguments-046e78ab9badb56d7e860e6412d47ec1.png"}}]);