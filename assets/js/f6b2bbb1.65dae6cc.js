"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[8476],{26600:(e,n,o)=>{o.d(n,{Ay:()=>s});var t=o(58168),i=(o(96540),o(15680)),a=o(22355);const r={toc:[]},l="wrapper";function s({components:e,...n}){return(0,i.yg)(l,(0,t.A)({},r,n,{components:e,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"You can define the ",(0,i.yg)("code",null,n.sectionName)," config section in two ways: ",(0,i.yg)("i",null,"globally")," and ",(0,i.yg)("i",null,"locally")," (per a configuration):"),(0,i.yg)(a.A,{title:".detoxrc.js",language:"javascript",mdxType:"CodeBlock"},["/** @type {Detox.DetoxConfig} */","module.exports = {","// highlight-start",`  ${n.sectionName}: {`,"    /* global section */","  },","// highlight-end","  devices: { /* \u2026 */ },","  apps: { /* \u2026 */ },","  configurations: {","    'ios.sim.debug': {","      device: 'iphone',","      app: 'ios.debug',","// highlight-start",`      ${n.sectionName}: {`,"        /* local (per-configuration) section */","      },","// highlight-end","    },","  },","};"].join("\n")))}s.isMDXComponent=!0},45589:(e,n,o)=>{o.d(n,{A:()=>t});const t=o.p+"assets/images/log-example-07a2afd13f5a9c00f864226c5694c431.png"},93281:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>g,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var t=o(58168),i=(o(96540),o(15680)),a=o(26600);const r={},l="Logger",s={unversionedId:"config/logger",id:"config/logger",title:"Logger",description:"The logger section controls how the printed logs are going to look like in your terminal window.",source:"@site/../docs/config/logger.mdx",sourceDirName:"config",slug:"/config/logger",permalink:"/Detox/docs/next/config/logger",draft:!1,editUrl:"https://github.com/wix/Detox/edit/master/docs/../docs/config/logger.mdx",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Behavior",permalink:"/Detox/docs/next/config/behavior"},next:{title:"Session",permalink:"/Detox/docs/next/config/session"}},g={},p=[{value:"Location",id:"location",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>logger.level</code> [enum]",id:"loggerlevel-enum",level:2},{value:"<code>logger.overrideConsole</code> [boolean]",id:"loggeroverrideconsole-boolean",level:2},{value:"<code>logger.options</code> BunyanDebugStreamOptions",id:"loggeroptions-bunyandebugstreamoptions",level:2}],d={toc:p},c="wrapper";function u({components:e,...n}){return(0,i.yg)(c,(0,t.A)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"logger"},"Logger"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"logger")," section controls how the printed logs are going to look like in your terminal window."),(0,i.yg)("p",null,(0,i.yg)("img",{src:o(45589).A,width:"1176",height:"218"})),(0,i.yg)("h2",{id:"location"},"Location"),(0,i.yg)(a.Ay,{sectionName:"logger",mdxType:"Location"}),(0,i.yg)("h2",{id:"properties"},"Properties"),(0,i.yg)("h2",{id:"loggerlevel-enum"},(0,i.yg)("inlineCode",{parentName:"h2"},"logger.level")," ","[","enum","]"),(0,i.yg)("p",null,"Default: ",(0,i.yg)("inlineCode",{parentName:"p"},"info"),"."),(0,i.yg)("p",null,"Possible values in the descending severity order: ",(0,i.yg)("inlineCode",{parentName:"p"},"fatal"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"error"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"warn"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"info"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"debug"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"trace"),"."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Use ",(0,i.yg)("inlineCode",{parentName:"li"},"info")," by default."),(0,i.yg)("li",{parentName:"ul"},"Use ",(0,i.yg)("inlineCode",{parentName:"li"},"error")," or ",(0,i.yg)("inlineCode",{parentName:"li"},"warn")," when you want to make the output as silent as possible."),(0,i.yg)("li",{parentName:"ul"},"Use ",(0,i.yg)("inlineCode",{parentName:"li"},"debug")," to control what generally is happening under the hood."),(0,i.yg)("li",{parentName:"ul"},"Use ",(0,i.yg)("inlineCode",{parentName:"li"},"trace")," when troubleshooting specific issues.")),(0,i.yg)("p",null,"Please note that the log level has no effect on the ",(0,i.yg)("a",{parentName:"p",href:"/Detox/docs/next/config/artifacts"},"generated log files")," and their content \u2013 it filters only the messages printed to your terminal."),(0,i.yg)("admonition",{type:"info"},(0,i.yg)("p",{parentName:"admonition"},"The verbosity of the logs can be influenced by the ",(0,i.yg)("a",{parentName:"p",href:"/Detox/docs/next/config/session#sessiondebugsynchronization-number"},(0,i.yg)("inlineCode",{parentName:"a"},"session.debugSynchronization"))," setting in your Detox configuration. Enabled by default, this setting helps track the reasons preventing your current actions from completing by identifying what the app is still busy with. It produces logs like this:"),(0,i.yg)("pre",{parentName:"admonition"},(0,i.yg)("code",{parentName:"pre"},'15:13:07.309 detox[17005] i The app is busy with the following tasks:\n\u2022 There are 10 work items pending on the dispatch queue: "Main Queue (<OS_dispatch_queue_main: com.apple.main-thread>)".\n...\n')),(0,i.yg)("p",{parentName:"admonition"},"If you want to disable or decrease how often session logs are saved, change the ",(0,i.yg)("inlineCode",{parentName:"p"},"session.debugSynchronization")," value to ",(0,i.yg)("inlineCode",{parentName:"p"},"0")," (to turn off logs) or increase it to ",(0,i.yg)("inlineCode",{parentName:"p"},"60000")," (to lower the frequency of logs). For a deeper understanding of this setting's purpose, refer to the ",(0,i.yg)("a",{parentName:"p",href:"/Detox/docs/next/articles/how-detox-works#how-detox-automatically-synchronizes-with-your-app"},"How Detox Works")," article.")),(0,i.yg)("hr",null),(0,i.yg)("h2",{id:"loggeroverrideconsole-boolean"},(0,i.yg)("inlineCode",{parentName:"h2"},"logger.overrideConsole")," ","[","boolean","]"),(0,i.yg)("p",null,"Default: ",(0,i.yg)("inlineCode",{parentName:"p"},"true"),"."),(0,i.yg)("p",null,"When enabled, hijacks all the console methods (console.log, console.warn, etc) so that the messages\nprinted via them are formatted and saved as Detox logs."),(0,i.yg)("h2",{id:"loggeroptions-bunyandebugstreamoptions"},(0,i.yg)("inlineCode",{parentName:"h2"},"logger.options")," ","[BunyanDebugStreamOptions]"),(0,i.yg)("p",null,"Default: varies according to the ",(0,i.yg)("inlineCode",{parentName:"p"},"logger.level"),"."),(0,i.yg)("p",null,"Since Detox is using ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/jwalton/bunyan-debug-stream"},"bunyan-debug-stream")," for printing logs,\nwe decided just to expose all its options for sake of simplicity of customization:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"export interface BunyanDebugStreamOptions {\n    colors?: { [key: number]: string | string[] } | false | null;\n    forceColor?: boolean;\n    basepath?: string;\n    basepathReplacement?: string;\n    showProcess?: boolean;\n    showDate?: boolean | ((time: Date, entry: any) => string);\n    showPrefixes?: boolean | ((prefixes: string[]) => string);\n    processName?: string;\n    maxExceptionLines?: number | 'auto';\n    stringifiers?: { [key: string]: Stringifier | null };\n    prefixers?: { [key: string]: Stringifier | null };\n    indent?: string;\n    showLoggerName?: boolean;\n    showPid?: boolean;\n    showLevel?: boolean;\n    showMetadata?: boolean;\n}\n")),(0,i.yg)("p",null,"There's one caveat inside ",(0,i.yg)("inlineCode",{parentName:"p"},"logger.options"),", however \u2013 all the custom functions ",(0,i.yg)("strong",{parentName:"p"},"must not")," use closures! That's\nbecause they get ",(0,i.yg)("inlineCode",{parentName:"p"},"eval()"),"-ed every time the test runner spawns a new child worker process. In other words:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},"const dontDoThis = date => date.toISOString();\n\nmodule.exports = {\n  logger: {\n    level: 'debug',\n    options: {\n      // showDate: (date) => dontDoThis(date),\n// highlight-next-line\n      showDate: (date) => date.toISOString(), /* do this instead */\n    },\n  },\n  // ...\n};\n")))}u.isMDXComponent=!0}}]);