"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5928],{15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>m});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach(function(n){r(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef(function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(t),g=r,m=c["".concat(s,".").concat(g)]||c[g]||d[g]||l;return t?a.createElement(m,i(i({ref:n},p),{},{components:t})):a.createElement(m,i({ref:n},p))});function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=g;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[c]="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},33511:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var a=t(58168),r=(t(96540),t(15680));const l={},i="Uninstalling Detox",o={unversionedId:"guide/uninstalling",id:"version-20.x/guide/uninstalling",title:"Uninstalling Detox",description:"Installing and using Detox implies certain side effects: cloned devices, cache files, state files, temporary files, etc.",source:"@site/versioned_docs/version-20.x/guide/uninstalling.md",sourceDirName:"guide",slug:"/guide/uninstalling",permalink:"/Detox/docs/guide/uninstalling",draft:!1,editUrl:"https://github.com/wix/Detox/edit/master/docs/versioned_docs/version-20.x/guide/uninstalling.md",tags:[],version:"20.x",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Cucumber.js Integration",permalink:"/Detox/docs/guide/cucumber-js-integration"},next:{title:"Natural Language Testing with Pilot",permalink:"/Detox/docs/pilot/testing-with-pilot"}},s={},u=[{value:"Detox Framework Cache",id:"detox-framework-cache",level:2},{value:"Test Session State",id:"test-session-state",level:2},{value:"Cloned Simulators (macOS)",id:"cloned-simulators-macos",level:2},{value:"Remnants of Artifacts",id:"remnants-of-artifacts",level:2},{value:"iOS",id:"ios",level:3},{value:"Android",id:"android",level:3},{value:"Detox CLI",id:"detox-cli",level:2}],p={toc:u},c="wrapper";function d({components:e,...n}){return(0,r.yg)(c,(0,a.A)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"uninstalling-detox"},"Uninstalling Detox"),(0,r.yg)("p",null,"Installing and using Detox implies certain side effects: cloned devices, cache files, state files, temporary files, etc."),(0,r.yg)("p",null,"This checklist might come in handy whenever you have to make a clean uninstallation after using Detox."),(0,r.yg)("h2",{id:"detox-framework-cache"},"Detox Framework Cache"),(0,r.yg)("p",null,"Every install of Detox also triggers a ",(0,r.yg)("inlineCode",{parentName:"p"},"postinstall")," script in its ",(0,r.yg)("inlineCode",{parentName:"p"},"package.json"),", which builds (or unpacks) ",(0,r.yg)("inlineCode",{parentName:"p"},"Detox.framework")," into ",(0,r.yg)("inlineCode",{parentName:"p"},"~/Library/Detox"),"."),(0,r.yg)("p",null,"You can either delete the folder manually:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"rm -rf ~/Library/Detox\n")),(0,r.yg)("p",null,"or run:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"detox clean-framework-cache\n")),(0,r.yg)("h2",{id:"test-session-state"},"Test Session State"),(0,r.yg)("p",null,"On every test run, Detox rewrites a few temporary files in ",(0,r.yg)("inlineCode",{parentName:"p"},"DETOX_LIBRARY_ROOT_PATH"),", i.e.:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("inlineCode",{parentName:"li"},"device.registry.json"),", to tell apart the busy and the available devices for use with multiple workers."),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("inlineCode",{parentName:"li"},"global-context.json.lock"),", to detect multiple concurrent instances of Detox.")),(0,r.yg)("p",null,"The location of ",(0,r.yg)("inlineCode",{parentName:"p"},"DETOX_LIBRARY_ROOT_PATH")," may vary depending on the operating system:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"macOS:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"~/Library/Detox"),"."))),(0,r.yg)("li",{parentName:"ul"},"Linux:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"$XDG_DATA_HOME/Detox"),", if ",(0,r.yg)("inlineCode",{parentName:"li"},"$XDG_DATA_HOME")," is defined;"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"~/.local/share/Detox"),", otherwise."))),(0,r.yg)("li",{parentName:"ul"},"Windows:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"%LOCALAPPDATA%\\data\\Detox"),", if ",(0,r.yg)("inlineCode",{parentName:"li"},"%LOCALAPPDATA%")," is defined;"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"%USERPROFILE%\\Application Data\\Detox"),", otherwise.")))),(0,r.yg)("h2",{id:"cloned-simulators-macos"},"Cloned Simulators (macOS)"),(0,r.yg)("p",null,'To support the "multiple workers" feature on iOS, Detox clones simulator instances when there aren\u2019t enough available ones.\nThe autogenerated simulators have names with ',(0,r.yg)("inlineCode",{parentName:"p"},"-Detox")," suffix appended, so you can easily spot them with:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'xcrun simctl list | grep "-Detox"\n')),(0,r.yg)("p",null,"To delete a simulator, you can use:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"xcrun simctl delete <uuid>\n")),(0,r.yg)("h2",{id:"remnants-of-artifacts"},"Remnants of Artifacts"),(0,r.yg)("p",null,"Forced exits may result in leaving some temporary files behind."),(0,r.yg)("h3",{id:"ios"},"iOS"),(0,r.yg)("p",null,"To ensure there are no temporary artifact files (logs, screenshots, etc.), you can run:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"rm -rf $TMPDIR/*.detox.*\n")),(0,r.yg)("p",null,"If you wish to clean up your iOS simulators from the installed apps and other customizations, just run the erase procedure for the relevant ones:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"xcrun simctl erase <uuid>\n")),(0,r.yg)("h3",{id:"android"},"Android"),(0,r.yg)("p",null,"The advice for iOS applies to the Android virtual devices as well. To wipe user files on a specific AVD, run:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"emulator -avd <your_AVD> -wipe-data\n")),(0,r.yg)("p",null,"If you have to clean temporary Detox files from an individual booted device, look out for files like ",(0,r.yg)("inlineCode",{parentName:"p"},"11159175_0.log")," in ",(0,r.yg)("inlineCode",{parentName:"p"},"/sdcard")," folder.\nYou can try deleting them using a simple wildcard like below or use your own:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"adb -s <emulator-port> shell rm -rf /sdcard/*_*.*\n")),(0,r.yg)("h2",{id:"detox-cli"},"Detox CLI"),(0,r.yg)("p",null,"If you have installed the official CLI wrapper for Detox, then make sure to uninstall it as well:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm uninstall detox-cli --global\n")))}d.isMDXComponent=!0}}]);