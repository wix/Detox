"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[7924],{15680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>m});var i=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),a.push.apply(a,i)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach(function(t){n(e,t,a[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))})}return e}function r(e,t){if(null==e)return{};var a,i,n=function(e,t){if(null==e)return{};var a,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)a=o[i],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)a=o[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=i.createContext({}),p=function(e){var t=i.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},g=i.forwardRef(function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),d=p(a),g=n,m=d["".concat(s,".").concat(g)]||d[g]||u[g]||o;return a?i.createElement(m,l(l({ref:t},c),{},{components:a})):i.createElement(m,l({ref:t},c))});function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=g;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[d]="string"==typeof e?e:n,l[1]=r;for(var p=2;p<o;p++)l[p]=a[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,a)}g.displayName="MDXCreateElement"},26530:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>p});var i=a(58168),n=(a(96540),a(15680));const o={id:"expect",slug:"api/expect",title:"Expect",sidebar_label:"Expect"},l=void 0,r={unversionedId:"expect",id:"version-19.x/expect",title:"Expect",description:"Expect",source:"@site/versioned_docs/version-19.x/APIRef.Expect.md",sourceDirName:".",slug:"/api/expect",permalink:"/Detox/docs/19.x/api/expect",draft:!1,editUrl:"https://github.com/wix/Detox/edit/master/docs/versioned_docs/version-19.x/APIRef.Expect.md",tags:[],version:"19.x",frontMatter:{id:"expect",slug:"api/expect",title:"Expect",sidebar_label:"Expect"},sidebar:"tutorialSidebar",previous:{title:"Actions",permalink:"/Detox/docs/19.x/api/actions-on-element"},next:{title:"Launch Arguments",permalink:"/Detox/docs/19.x/api/launch-args"}},s={},p=[{value:"Expect",id:"expect",level:2},{value:"Methods",id:"methods",level:3},{value:"<code>toBeVisible()</code>",id:"tobevisible",level:4},{value:"<code>toExist()</code>",id:"toexist",level:4},{value:"<code>toBeFocused()</code>",id:"tobefocused",level:4},{value:"<code>toHaveText(text)</code>",id:"tohavetexttext",level:4},{value:"<code>toHaveLabel(label)</code>",id:"tohavelabellabel",level:4},{value:"<code>toHaveId(id)</code>",id:"tohaveidid",level:4},{value:"<code>toHaveValue(value)</code>",id:"tohavevaluevalue",level:4},{value:"<code>toHaveSliderPosition(normalizedPosition, tolerance)</code>",id:"tohavesliderpositionnormalizedposition-tolerance",level:4},{value:"<code>toHaveToggleValue(value)</code>",id:"tohavetogglevaluevalue",level:4},{value:"<code>not</code>",id:"not",level:4},{value:"<code>withTimeout(timeout)</code>",id:"withtimeouttimeout",level:4},{value:"Deprecated Methods",id:"deprecated-methods",level:3},{value:"<code>toBeNotVisible()</code>",id:"tobenotvisible",level:4},{value:"<code>toNotExist()</code>",id:"tonotexist",level:4},{value:"<code>toBeNotFocused()</code>",id:"tobenotfocused",level:4}],c={toc:p},d="wrapper";function u({components:e,...t}){return(0,n.yg)(d,(0,i.A)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,n.yg)("h2",{id:"expect"},"Expect"),(0,n.yg)("p",null,"Detox uses ",(0,n.yg)("a",{parentName:"p",href:"/Detox/docs/19.x/api/matchers"},"matchers")," to match UI elements in your app and expectations to verify those elements are in the expected state."),(0,n.yg)("p",null,"Use ",(0,n.yg)("a",{parentName:"p",href:"/Detox/docs/19.x/api/actions-on-element"},"actions")," to simulate use interaction with elements."),(0,n.yg)("h3",{id:"methods"},"Methods"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#tobevisible"},(0,n.yg)("inlineCode",{parentName:"a"},".toBeVisible()"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#toexist"},(0,n.yg)("inlineCode",{parentName:"a"},".toExist()"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#tobefocused"},(0,n.yg)("inlineCode",{parentName:"a"},".toBeFocused()"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#tohavetexttext"},(0,n.yg)("inlineCode",{parentName:"a"},".toHaveText()"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#tohavelabellabel"},(0,n.yg)("inlineCode",{parentName:"a"},".toHaveLabel()"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#tohaveidid"},(0,n.yg)("inlineCode",{parentName:"a"},".toHaveId()"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#tohavevaluevalue"},(0,n.yg)("inlineCode",{parentName:"a"},".toHaveValue()"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#tohavesliderpositionnormalizedposition-tolerance"},(0,n.yg)("inlineCode",{parentName:"a"},".toHaveSliderPosition()"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#tohavetogglevaluevalue"},(0,n.yg)("inlineCode",{parentName:"a"},".toHaveToggleValue()"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#not"},(0,n.yg)("inlineCode",{parentName:"a"},".not"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#withtimeouttimeout"},(0,n.yg)("inlineCode",{parentName:"a"},".withTimeout()")))),(0,n.yg)("h4",{id:"tobevisible"},(0,n.yg)("inlineCode",{parentName:"h4"},"toBeVisible()")),(0,n.yg)("p",null,"Expects the view to be at least N% visible on the screen.\nAccepts an optional parameter of percent threshold of element visibility, integer ranging from 1 to 100, that determines whether the element is visible or not. If no number is provided then defaults to 75%."),(0,n.yg)("p",null,"Negating this expectation with a ",(0,n.yg)("inlineCode",{parentName:"p"},"not")," expression expects the view\u2019s visible area to be lower than N%."),(0,n.yg)("p",null,"On iOS, visibility is defined by having the view, or one of its subviews, be topmost at the view\u2019s activation point on screen."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"await expect(element(by.id('UniqueId203'))).toBeVisible();\nawait expect(element(by.id('UniqueId204'))).toBeVisible(35);\n")),(0,n.yg)("h4",{id:"toexist"},(0,n.yg)("inlineCode",{parentName:"h4"},"toExist()")),(0,n.yg)("p",null,"Expects the element to exist within the app\u2019s current UI hierarchy."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"await expect(element(by.id('UniqueId205'))).toExist();\n")),(0,n.yg)("h4",{id:"tobefocused"},(0,n.yg)("inlineCode",{parentName:"h4"},"toBeFocused()")),(0,n.yg)("p",null,"Expects the element to be the focused element."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"await expect(element(by.id('textFieldId'))).toBeFocused();\n")),(0,n.yg)("h4",{id:"tohavetexttext"},(0,n.yg)("inlineCode",{parentName:"h4"},"toHaveText(text)")),(0,n.yg)("p",null,"Expects the element to have the specified text."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"await expect(element(by.id('UniqueId204'))).toHaveText('I contain some text');\n")),(0,n.yg)("h4",{id:"tohavelabellabel"},(0,n.yg)("inlineCode",{parentName:"h4"},"toHaveLabel(label)")),(0,n.yg)("p",null,"Expects the element to have the specified label as its accessibility label (iOS) or content description (Android). In React Native, this corresponds to the value in the ",(0,n.yg)("a",{parentName:"p",href:"https://reactnative.dev/docs/accessibility#accessibilitylabel"},(0,n.yg)("inlineCode",{parentName:"a"},"accessibilityLabel"))," prop."),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},"Note that there is an inconsistency between the implementation for accessibility between Android and iOS. On iOS if a View has no ",(0,n.yg)("inlineCode",{parentName:"p"},"accessibilityLabel")," explicitly defined, then it defaults to having a concatenation of the accessibilityLabels of the child Views. On Android, the same View would have no ",(0,n.yg)("inlineCode",{parentName:"p"},"accessibilityLabel")," at all. See ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/facebook/react-native/issues/32826"},"this")," issue for details.")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"await expect(element(by.id('UniqueId204'))).toHaveLabel('Done');\n")),(0,n.yg)("h4",{id:"tohaveidid"},(0,n.yg)("inlineCode",{parentName:"h4"},"toHaveId(id)")),(0,n.yg)("p",null,"Expects the element to have the specified accessibility identifier. In React Native, this corresponds to the value in the ",(0,n.yg)("a",{parentName:"p",href:"https://reactnative.dev/docs/view.html#testid"},(0,n.yg)("inlineCode",{parentName:"a"},"testID"))," prop."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"await expect(element(by.text('I contain some text'))).toHaveId('UniqueId204');\n")),(0,n.yg)("h4",{id:"tohavevaluevalue"},(0,n.yg)("inlineCode",{parentName:"h4"},"toHaveValue(value)")),(0,n.yg)("p",null,"Expects the element to have the specified accessibility value. In React Native, this corresponds to the value in the ",(0,n.yg)("a",{parentName:"p",href:"https://reactnative.dev/docs/view.html#accessibilityvalue"},(0,n.yg)("inlineCode",{parentName:"a"},"accessibilityValue"))," prop."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"await expect(element(by.id('UniqueId533'))).toHaveValue('0');\n")),(0,n.yg)("h4",{id:"tohavesliderpositionnormalizedposition-tolerance"},(0,n.yg)("inlineCode",{parentName:"h4"},"toHaveSliderPosition(normalizedPosition, tolerance)")),(0,n.yg)("p",null,"Expects the slider element to have the specified normalized position (","[","0, 1]), within the provided tolerance (optional)."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"await expect(element(by.id('slider'))).toHaveSliderPosition(0.75);\nawait expect(element(by.id('slider'))).toHaveSliderPosition(0.3113, 0.00001);\n")),(0,n.yg)("h4",{id:"tohavetogglevaluevalue"},(0,n.yg)("inlineCode",{parentName:"h4"},"toHaveToggleValue(value)")),(0,n.yg)("p",null,"Expects a toggle-able element (e.g. a Switch or a Check-Box) to be on/checked or off/unchecked. As a reference, in react-native, this is the ",(0,n.yg)("a",{parentName:"p",href:"https://reactnative.dev/docs/switch"},"equivalent switch component"),"."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"await expect(element(by.id('switch'))).toHaveToggleValue(true);\nawait expect(element(by.id('checkbox'))).toHaveToggleValue(false);\n")),(0,n.yg)("h4",{id:"not"},(0,n.yg)("inlineCode",{parentName:"h4"},"not")),(0,n.yg)("p",null,"Negates the expectation."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"await expect(element(by.id('UniqueId533'))).not.toBeVisible();\n")),(0,n.yg)("h4",{id:"withtimeouttimeout"},(0,n.yg)("inlineCode",{parentName:"h4"},"withTimeout(timeout)")),(0,n.yg)("p",null,"Waits until the expectation is resolved for the specified amount of time. If timeout is reached before resolution, the expectation is failed."),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"timeout"),"\u2014the timeout to wait, in ms"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"await waitFor(element(by.id('UniqueId204'))).toBeVisible().withTimeout(2000);\n")),(0,n.yg)("h3",{id:"deprecated-methods"},"Deprecated Methods"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#tobenotvisible"},(0,n.yg)("inlineCode",{parentName:"a"},".toBeNotVisible()"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#tonotexist"},(0,n.yg)("inlineCode",{parentName:"a"},".toNotExist()"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#tobenotfocused"},(0,n.yg)("inlineCode",{parentName:"a"},".toBeNotFocused()")))),(0,n.yg)("h4",{id:"tobenotvisible"},(0,n.yg)("inlineCode",{parentName:"h4"},"toBeNotVisible()")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Deprecated:")," Use ",(0,n.yg)("inlineCode",{parentName:"p"},".not.toBeVisible()")," instead."),(0,n.yg)("p",null,"Expects the element to not be visible on screen."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"await expect(element(by.id('UniqueId205'))).toBeNotVisible();\n")),(0,n.yg)("h4",{id:"tonotexist"},(0,n.yg)("inlineCode",{parentName:"h4"},"toNotExist()")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Deprecated:")," Use ",(0,n.yg)("inlineCode",{parentName:"p"},".not.toExist()")," instead."),(0,n.yg)("p",null,"Expects the element to not exist within the app\u2019s current UI hierarchy."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"await expect(element(by.id('RandomJunk959'))).toNotExist();\n")),(0,n.yg)("h4",{id:"tobenotfocused"},(0,n.yg)("inlineCode",{parentName:"h4"},"toBeNotFocused()")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Deprecated:")," Use ",(0,n.yg)("inlineCode",{parentName:"p"},".not.toBeFocused()")," instead."),(0,n.yg)("p",null,"Expects the element not to be the focused element."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"await expect(element(by.id('textFieldId'))).toBeFocused();\n")))}u.isMDXComponent=!0}}]);