"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7332],{15680:(e,t,n)=>{n.d(t,{xA:()=>g,yg:()=>m});var i=n(96540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach(function(t){o(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function l(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},g=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef(function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=o,m=c["".concat(s,".").concat(d)]||c[d]||u[d]||a;return n?i.createElement(m,r(r({ref:t},g),{},{components:n})):i.createElement(m,r({ref:t},g))});function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,r[1]=l;for(var p=2;p<a;p++)r[p]=n[p];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},67888:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/copilot-demo-6f1e5193e3cea07de196d443153fcd3a.gif"},90689:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var i=n(58168),o=(n(96540),n(15680));const a={},r="Natural Language Testing with Pilot",l={unversionedId:"pilot/testing-with-pilot",id:"pilot/testing-with-pilot",title:"Natural Language Testing with Pilot",description:"In this tutorial, we'll explore how to use Pilot to write end-to-end tests using natural language commands. Pilot leverages large language models (LLMs) to translate human-readable instructions or goal into Detox actions and assertions, making test writing more intuitive and accessible.",source:"@site/../docs/pilot/testing-with-pilot.md",sourceDirName:"pilot",slug:"/pilot/testing-with-pilot",permalink:"/Detox/docs/next/pilot/testing-with-pilot",draft:!1,editUrl:"https://github.com/wix/Detox/edit/master/docs/../docs/pilot/testing-with-pilot.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Uninstalling Detox",permalink:"/Detox/docs/next/guide/uninstalling"},next:{title:"Pilot Best Practices",permalink:"/Detox/docs/next/pilot/best-practices"}},s={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Implementing a <code>PromptHandler</code>",id:"implementing-a-prompthandler",level:2},{value:"Example of a <code>PromptHandler</code> for OpenAI&#39;s GPT-4",id:"example-of-a-prompthandler-for-openais-gpt-4",level:3},{value:"Initializing Pilot",id:"initializing-pilot",level:2},{value:"Writing Tests with Pilot",id:"writing-tests-with-pilot",level:2},{value:"Writing Step-by-Step Tests with <code>pilot.perform</code>",id:"writing-step-by-step-tests-with-pilotperform",level:3},{value:"Hybrid Tests with Pilot and Detox APIs",id:"hybrid-tests-with-pilot-and-detox-apis",level:4},{value:"Locating Elements with Pilot",id:"locating-elements-with-pilot",level:3},{value:"Goal-Oriented Tests with <code>pilot.autoPilot</code>",id:"goal-oriented-tests-with-pilotautopilot",level:2},{value:"Contributing to Pilot",id:"contributing-to-pilot",level:2}],g={toc:p},c="wrapper";function u({components:e,...t}){return(0,o.yg)(c,(0,i.A)({},g,t,{components:e,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"natural-language-testing-with-pilot"},"Natural Language Testing with Pilot"),(0,o.yg)("p",null,"In this tutorial, we'll explore how to use ",(0,o.yg)("strong",{parentName:"p"},"Pilot")," to write end-to-end tests using natural language commands. Pilot leverages large language models (LLMs) to translate human-readable instructions or goal into Detox actions and assertions, making test writing more intuitive and accessible."),(0,o.yg)("admonition",{type:"note"},(0,o.yg)("p",{parentName:"admonition"},"Pilot now has a new ",(0,o.yg)("a",{parentName:"p",href:"https://wix-pilot.com/"},"documentation site"),".",(0,o.yg)("br",null),"\nThere, you can find a ",(0,o.yg)("a",{parentName:"p",href:"https://wix-pilot.com/docs/guides/technical-overview"},"technical overview"),", learn how to ",(0,o.yg)("a",{parentName:"p",href:"https://wix-pilot.com/docs/guides/implementing-custom-testing-framework-driver"},"implement a driver for your preferred testing framework"),", and stay up to date with the latest features and updates.")),(0,o.yg)("admonition",{title:"Work in Progress",type:"caution"},(0,o.yg)("p",{parentName:"admonition"},(0,o.yg)("strong",{parentName:"p"},"Note"),": Pilot is in active development. APIs are subject to change in future releases.",(0,o.yg)("br",null),"\nFor complete API details, refer to our ",(0,o.yg)("a",{parentName:"p",href:"../api/pilot"},"Pilot API documentation"),".")),(0,o.yg)("h2",{id:"introduction"},"Introduction"),(0,o.yg)("p",null,"Pilot simplifies the process of writing tests by allowing you to describe test steps in natural language.\nIt interprets these instructions or goal and translates them into Detox commands. This guide will help you integrate Pilot into your testing workflow and provide best practices for writing effective intents."),(0,o.yg)("p",null,(0,o.yg)("img",{alt:"Demo",src:n(67888).A,width:"800",height:"450"})),(0,o.yg)("h2",{id:"implementing-a-prompthandler"},"Implementing a ",(0,o.yg)("inlineCode",{parentName:"h2"},"PromptHandler")),(0,o.yg)("p",null,"The ",(0,o.yg)("inlineCode",{parentName:"p"},"PromptHandler")," is a crucial component that interfaces with your LLM service.\nBelow is an example of how to implement a ",(0,o.yg)("inlineCode",{parentName:"p"},"PromptHandler")," using OpenAI's GPT-4 API."),(0,o.yg)("p",null,"You can adapt this code to work with other LLMs or services as needed. You may also find pre-built ",(0,o.yg)("inlineCode",{parentName:"p"},"PromptHandler")," implementations for popular LLMs in the ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/wix-incubator/pilot"},"Pilot repository on GitHub"),"."),(0,o.yg)("admonition",{title:"Open for Contributions",type:"note"},(0,o.yg)("p",{parentName:"admonition"},"If you have implemented a ",(0,o.yg)("inlineCode",{parentName:"p"},"PromptHandler")," for a specific LLM or service, consider contributing it to the ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/wix-incubator/pilot"},"Wix Pilot GitHub Repository")," to help the community.")),(0,o.yg)("h3",{id:"example-of-a-prompthandler-for-openais-gpt-4"},"Example of a ",(0,o.yg)("inlineCode",{parentName:"h3"},"PromptHandler")," for OpenAI's GPT-4"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"import OpenAI from 'openai';\n\nconst path = require('path');\n\nclass OpenAIPromptHandler {\n  constructor(apiKey) {\n    const configuration = new OpenAI({ apiKey });\n    this.openai = new OpenAI(configuration);\n  }\n\n  async runPrompt(prompt, imagePath) {\n    const messages = [\n      { role: 'system', content: 'You are a test automation assistant.' },\n      { role: 'user', content: prompt },\n    ];\n\n    // If an image is provided, \"upload\" it and include the URL in the prompt\n    if (imagePath && this.isSnapshotImageSupported()) {\n      try {\n        const imageUrl = await this.uploadImage(imagePath);\n        messages.push({\n          role: 'user',\n          content: `Here is an image for reference: ${imageUrl}`,\n        });\n      } catch (error) {\n        console.error('Error uploading image:', error);\n        throw new Error('Failed to upload image');\n      }\n    }\n\n    const response = await this.openai.chat.completions.create({\n      model: 'gpt-4',\n      messages,\n    });\n\n    return response.data.choices[0].message.content;\n  }\n\n  async uploadImage(imagePath) {\n    // Uploads the image and returns the URL\n  }\n\n  isSnapshotImageSupported() {\n    return true; // Set to true to handle image uploads\n  }\n}\n\nmodule.exports = OpenAIPromptHandler;\n")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Explanation"),":"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},(0,o.yg)("inlineCode",{parentName:"strong"},"runPrompt")),": Sends the prompt to the LLM and returns the response."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},(0,o.yg)("inlineCode",{parentName:"strong"},"isSnapshotImageSupported")),": Indicates whether the LLM can handle snapshot images. If set to ",(0,o.yg)("inlineCode",{parentName:"li"},"true"),", the handler will include image URLs in the prompt and will include them when instructing Pilot.")),(0,o.yg)("h2",{id:"initializing-pilot"},"Initializing Pilot"),(0,o.yg)("p",null,"Initialize Pilot with your ",(0,o.yg)("inlineCode",{parentName:"p"},"PromptHandler")," before running any tests.\nThis is typically done in the ",(0,o.yg)("inlineCode",{parentName:"p"},"beforeAll")," hook or a setup file."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Example"),":"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"const {pilot} = require('detox/index');\nconst OpenAIPromptHandler = require('./OpenAIPromptHandler');\n\nbeforeAll(() => {\n  const promptHandler = new OpenAIPromptHandler('YOUR_OPENAI_API_KEY');\n  pilot.init(promptHandler);\n});\n")),(0,o.yg)("h2",{id:"writing-tests-with-pilot"},"Writing Tests with Pilot"),(0,o.yg)("p",null,"With Pilot initialized, you can now write tests using the ",(0,o.yg)("inlineCode",{parentName:"p"},"pilot.perform")," method by sending a list of specific instructions, or the ",(0,o.yg)("inlineCode",{parentName:"p"},"pilot.autopilot")," method to define the goal and generate actions automatically."),(0,o.yg)("h3",{id:"writing-step-by-step-tests-with-pilotperform"},"Writing Step-by-Step Tests with ",(0,o.yg)("inlineCode",{parentName:"h3"},"pilot.perform")),(0,o.yg)("p",null,"Pilot allows you to write tests by providing a sequence of natural language instructions, using ",(0,o.yg)("inlineCode",{parentName:"p"},"perform")," method. Each instruction corresponds to a single action or assertion."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"it('should verify element sizes and button states', async () => {\n  await pilot.perform(\n    'Launch the app with notification permissions enabled',\n    'Navigate to the \"Settings\" page',\n    'Verify that the \"Save\" button is disabled',\n    'Locate the profile picture element',\n    'Verify that the profile picture size is 100 x 100 pixels and that the image is available and rendered',\n    'Tap on the \"Edit Profile\" button',\n    'Verify that the \"Save\" button is now enabled',\n    'Verify that the \"Username\" field text is bold'\n  );\n});\n")),(0,o.yg)("p",null,"In the example above, Pilot can perform checks that go beyond traditional UI testing, such as verifying element sizes, button states (enabled/disabled), or text styles (e.g., bold). This is thanks to the combination of Detox code-generation and multimodal LLMs that can analyze the snapshots."),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Step-by-Step Instructions"),": Each step is a separate string, representing a single action or assertion."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Sequential Execution"),": Steps are executed in order, allowing you to describe complex interactions intuitively.")),(0,o.yg)("h4",{id:"hybrid-tests-with-pilot-and-detox-apis"},"Hybrid Tests with Pilot and Detox APIs"),(0,o.yg)("p",null,"You can also combine Pilot commands with traditional Detox APIs for more control."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"it('should add an item to the cart', async () => {\n  await pilot.perform(\n    'Launch the app',\n    'Navigate to the \"Products\" page',\n    'Tap on the \"Add to Cart\" button for the first product'\n  );\n\n  const cartBadge = element(by.id('cart-badge'));\n  await expect(cartBadge).toHaveText('1');\n\n  await pilot.perform(\n    'Navigate to the \"Cart\" page',\n    'Verify that the product is listed in the cart'\n  );\n});\n")),(0,o.yg)("h3",{id:"locating-elements-with-pilot"},"Locating Elements with Pilot"),(0,o.yg)("p",null,"You can also use Pilot to retrieve values, locate elements, or perform advanced checks such as verifying element sizes or button states."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"it('should display the correct page title', async () => {\n  const pageTitleElement = await pilot.perform(\n    'Launch the app',\n    'Navigate to the \"Profile\" page',\n    'Locate the page title element'\n  );\n\n  await expect(pageTitleElement).toHaveText('Profile');\n});\n")),(0,o.yg)("h2",{id:"goal-oriented-tests-with-pilotautopilot"},"Goal-Oriented Tests with ",(0,o.yg)("inlineCode",{parentName:"h2"},"pilot.autoPilot")),(0,o.yg)("p",null,"With the ",(0,o.yg)("inlineCode",{parentName:"p"},"pilot.autopilot")," method, you can define the desired goal of your test, and Pilot will automatically generate the necessary actions and assertions to achieve that goal. This method focuses on the outcome, allowing you to create tests without having to specify each step manually."),(0,o.yg)("h2",{id:"contributing-to-pilot"},"Contributing to Pilot"),(0,o.yg)("p",null,"Contributions are welcome!\nVisit the ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/wix-incubator/pilot"},"Pilot GitHub Repository")," to open issues or pull requests if they are relevant to the core-library functionality or open a it under ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/wix/Detox"},"Detox repository")," if it is related to Detox-Pilot integration or if you are not sure where the issue should be opened."))}u.isMDXComponent=!0}}]);