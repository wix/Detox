"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6461],{15680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>d});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach(function(n){a(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),l=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(p.Provider,{value:n},e.children)},s="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef(function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=l(t),m=a,d=s["".concat(p,".").concat(m)]||s[m]||g[m]||i;return t?r.createElement(d,o(o({ref:n},u),{},{components:t})):r.createElement(d,o({ref:n},u))});function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c[s]="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},59347:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=t(58168),a=(t(96540),t(15680));const i={},o="Mocking Open With URL (Deep Links)",c={unversionedId:"guide/mocking-open-with-url",id:"guide/mocking-open-with-url",title:"Mocking Open With URL (Deep Links)",description:"You can mock opening the app from URL to test your app\u2019s deep link handling mechanism.",source:"@site/../docs/guide/mocking-open-with-url.md",sourceDirName:"guide",slug:"/guide/mocking-open-with-url",permalink:"/Detox/docs/next/guide/mocking-open-with-url",draft:!1,editUrl:"https://github.com/wix/Detox/edit/master/docs/../docs/guide/mocking-open-with-url.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Using Launch Arguments",permalink:"/Detox/docs/next/guide/launch-args"},next:{title:"Mocking User Notifications",permalink:"/Detox/docs/next/guide/mocking-user-notifications"}},p={},l=[{value:"Mocking App Launch With a URL",id:"mocking-app-launch-with-a-url",level:3},{value:"Example",id:"example",level:4},{value:"Mocking Opening With a URL On a Launched App",id:"mocking-opening-with-a-url-on-a-launched-app",level:3}],u={toc:l},s="wrapper";function g({components:e,...n}){return(0,a.yg)(s,(0,r.A)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"mocking-open-with-url-deep-links"},"Mocking Open With URL (Deep Links)"),(0,a.yg)("p",null,"You can mock opening the app from URL to test your app\u2019s deep link handling mechanism."),(0,a.yg)("h3",{id:"mocking-app-launch-with-a-url"},"Mocking App Launch With a URL"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"await device.launchApp({newInstance: true, url, sourceApp: bundleId}); // sourceApp is an optional iOS-only argument\n")),(0,a.yg)("h4",{id:"example"},"Example"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"describe('launch app from URL', () => {\n    it('should handle URL successfully', async () => {\n      await device.launchApp({\n        newInstance: true,\n        url: 'scheme://some.url',\n        sourceApp: 'com.apple.mobilesafari'\n      });\n      await expect(element(by.text('a label'))).toBeVisible();\n    });\n  });\n")),(0,a.yg)("h3",{id:"mocking-opening-with-a-url-on-a-launched-app"},"Mocking Opening With a URL On a Launched App"),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},"iOS-only")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"await device.openURL({url: 'scheme://some.url', sourceApp: 'com.apple.mobilesafari'});\n")))}g.isMDXComponent=!0}}]);