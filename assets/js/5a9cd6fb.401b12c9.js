"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[7243],{15680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>m});var i=t(96540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach(function(n){o(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function s(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=i.createContext({}),p=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=p(e.components);return i.createElement(l.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef(function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(t),g=o,m=c["".concat(l,".").concat(g)]||c[g]||d[g]||r;return t?i.createElement(m,a(a({ref:n},u),{},{components:t})):i.createElement(m,a({ref:n},u))});function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,a=new Array(r);a[0]=g;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[c]="string"==typeof e?e:o,a[1]=s;for(var p=2;p<r;p++)a[p]=t[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},81168:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var i=t(58168),o=(t(96540),t(15680));const r={},a="Preparing for CI",s={unversionedId:"introduction/preparing-for-ci",id:"introduction/preparing-for-ci",title:"Preparing for CI",description:"This guide is outdated.",source:"@site/../docs/introduction/preparing-for-ci.md",sourceDirName:"introduction",slug:"/introduction/preparing-for-ci",permalink:"/Detox/docs/next/introduction/preparing-for-ci",draft:!1,editUrl:"https://github.com/wix/Detox/edit/master/docs/../docs/introduction/preparing-for-ci.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"How to Debug",permalink:"/Detox/docs/next/introduction/debugging"},next:{title:"Adding test ID's to your components",permalink:"/Detox/docs/next/guide/test-id"}},l={},p=[{value:"Step 1: Prepare a Release Configuration for Your App",id:"step-1-prepare-a-release-configuration-for-your-app",level:2},{value:"Step 2: Add <code>build</code> and <code>test</code> Commands to Your CI Script",id:"step-2-add-build-and-test-commands-to-your-ci-script",level:2},{value:"Running Android Tests on CI",id:"running-android-tests-on-ci",level:2},{value:"Appendix",id:"appendix",level:2},{value:"\u2022 Running Detox on Travis CI",id:"-running-detox-on-travis-ci",level:3},{value:"\u2022 Running Detox on Bitrise",id:"-running-detox-on-bitrise",level:3},{value:"\u2022 Running Detox on GitLab CI - Android Only",id:"-running-detox-on-gitlab-ci---android-only",level:3}],u={toc:p},c="wrapper";function d({components:e,...n}){return(0,o.yg)(c,(0,i.A)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"preparing-for-ci"},"Preparing for CI"),(0,o.yg)("admonition",{title:"Disclaimer",type:"danger"},(0,o.yg)("p",{parentName:"admonition"},"This guide is outdated.")),(0,o.yg)("p",null,"When your test suite is finally ready, it should be set up to run automatically on your CI server on every git push. This will alert you if new changes to the app break existing functionality."),(0,o.yg)("p",null,"Running Detox on CI is not that different from running it locally. There are two main differences:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"You should test a release build rather than a debug build"),(0,o.yg)("li",{parentName:"ul"},"Tell Detox to shut down the simulator when test is over")),(0,o.yg)("h2",{id:"step-1-prepare-a-release-configuration-for-your-app"},"Step 1: Prepare a Release Configuration for Your App"),(0,o.yg)("p",null,"We will need to create a release app configuration for Detox \u2013 follow ",(0,o.yg)("a",{parentName:"p",href:"/Detox/docs/next/introduction/project-setup"},"the previous tutorial"),"\nif you haven\u2019t completed it already."),(0,o.yg)("h2",{id:"step-2-add-build-and-test-commands-to-your-ci-script"},"Step 2: Add ",(0,o.yg)("inlineCode",{parentName:"h2"},"build")," and ",(0,o.yg)("inlineCode",{parentName:"h2"},"test")," Commands to Your CI Script"),(0,o.yg)("p",null,"Assuming your CI is executing some sort of shell script, add the following commands that should run inside the project root:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"detox build --configuration ios.sim.release\ndetox test --configuration ios.sim.release\n")),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"Make sure to shut down the simulator when your tests are over.")),(0,o.yg)("h2",{id:"running-android-tests-on-ci"},"Running Android Tests on CI"),(0,o.yg)("p",null,"Setting up a CI environment capable of running Android tests isn\u2019t as trivial."),(0,o.yg)("p",null,"Fortunately, we\u2019ve written all about it in a ",(0,o.yg)("a",{parentName:"p",href:"https://medium.com/wix-engineering/how-to-execute-android-ui-tests-on-ci-and-stay-alive-eb9089d88c1f"},"blogpost on medium!")),(0,o.yg)("p",null,"Also, check out the guide on how to ",(0,o.yg)("a",{parentName:"p",href:"/Detox/docs/next/guide/android-dev-env"},"prepare Android emulators for CI"),"."),(0,o.yg)("h2",{id:"appendix"},"Appendix"),(0,o.yg)("h3",{id:"-running-detox-on-travis-ci"},"\u2022 Running Detox on ",(0,o.yg)("a",{parentName:"h3",href:"https://travis-ci.org/"},"Travis CI")),(0,o.yg)("p",null,"Detox\u2019s own build is running on Travis, check out Detox\u2019s ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/wix/Detox/tree/master/.travis.yml"},(0,o.yg)("inlineCode",{parentName:"a"},".travis.yml"))," file to see how it\u2019s done."),(0,o.yg)("p",null,"This is a simple example configuration to get you started with Detox on Travis:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},'language: objective-c\nosx_image: xcode8.3\n\nbranches:\n  only:\n  - master\n\nenv:\n  global:\n  - NODE_VERSION=stable\n\ninstall:\n- brew tap wix/brew\n- brew install applesimutils\n- curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash\n- export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"\n- nvm install $NODE_VERSION\n- nvm use $NODE_VERSION\n- nvm alias default $NODE_VERSION\n\n- npm install react-native-cli --global\n- npm install detox-cli --global\n\nscript:\n- detox build --configuration ios.sim.release\n- detox test --configuration ios.sim.release --cleanup\n\n')),(0,o.yg)("h3",{id:"-running-detox-on-bitrise"},"\u2022 Running Detox on ",(0,o.yg)("a",{parentName:"h3",href:"https://www.bitrise.io/"},"Bitrise")),(0,o.yg)("p",null,"Bitrise is a popular CI service for automating React Native apps. If you are looking to get started with Bitrise, check out ",(0,o.yg)("a",{parentName:"p",href:"https://blog.bitrise.io/post/how-to-set-up-a-react-native-app-on-bitrise"},"this")," guide."),(0,o.yg)("p",null,"You can run Detox on Bitrise by creating a new workflow. Below is an example of the Bitrise ",(0,o.yg)("inlineCode",{parentName:"p"},".yml")," file for a workflow called ",(0,o.yg)("inlineCode",{parentName:"p"},"tests"),"."),(0,o.yg)("p",null,"Additionally, you can use a ",(0,o.yg)("a",{parentName:"p",href:"https://devcenter.bitrise.io/en/apps/webhooks/adding-incoming-webhooks.html"},"webhook")," on Bitrise to post the build status directly into your Slack channel."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},"---\nformat_version: 1.1.0\ndefault_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git\ntrigger_map:\n- push_branch: \"*\"\n  workflow: tests\nworkflows:\n  _tests_setup:\n    steps:\n    - activate-ssh-key: {}\n    - git-clone:\n        inputs:\n        - clone_depth: ''\n        title: Git Clone Repo\n    - script:\n        inputs:\n        - content: |-\n            #!/bin/bash\n\n            npm cache verify\n\n            npm install\n        title: Install NPM Packages\n    before_run:\n    after_run:\n  _detox_tests:\n    before_run: []\n    after_run: []\n    steps:\n    - npm:\n        inputs:\n        - command: install -g detox-cli\n        title: Install Detox CLI\n    - npm:\n        inputs:\n        - command: install -g react-native-cli\n        title: Install React Native CLI\n    - script:\n        inputs:\n        - content: |-\n            #!/bin/bash\n\n            brew tap wix/brew\n            brew install applesimutils\n        title: Install Detox Utils\n    - script:\n        inputs:\n        - content: |-\n            #!/bin/bash\n\n            detox build --configuration ios.sim.release\n        title: Detox - Build Release App\n    - script:\n        inputs:\n        - content: |-\n            #!/bin/bash\n\n            detox test --configuration ios.sim.release --cleanup\n        title: Detox - Run E2E Tests\n  tests:\n    before_run:\n    - _tests_setup\n    - _detox_tests\n    after_run: []\n")),(0,o.yg)("h3",{id:"-running-detox-on-gitlab-ci---android-only"},"\u2022 Running Detox on ",(0,o.yg)("a",{parentName:"h3",href:"https://docs.gitlab.com/ee/ci/README.html"},"GitLab CI")," - Android Only"),(0,o.yg)("p",null,"GitLab is also a popular git management service which also include a built-in CI system. They provide free runner up to 2000 minutes for private projects, however, the runners provided by them cannot be used to run Detox due to the lack of KVM support (in order to run Android Emulators). You can, instead, ",(0,o.yg)("a",{parentName:"p",href:"https://docs.gitlab.com/ee/ci/runners/README.html"},"create your own runner")," with KVM support. Some example of cloud providers offering this are: ",(0,o.yg)("a",{parentName:"p",href:"https://www.digitalocean.com/products/droplets/"},"Digital Ocean"),", AWS (with ",(0,o.yg)("a",{parentName:"p",href:"https://aws.amazon.com/ec2/instance-types/c5/"},"C5 instance types"),"), ",(0,o.yg)("a",{parentName:"p",href:"https://cloud.google.com/compute/docs/instances/enable-nested-virtualization-vm-instances"},"Google Cloud")," and ",(0,o.yg)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nested-virtualization"},"Azure")),(0,o.yg)("p",null,"One example of such job can be:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},'detox_e2e:\n  stage: test\n  image: reactnativecommunity/react-native-android\n  variables:\n  before_script:\n    - npm install envinfo detox-cli --global && envinfo\n    # Increase file watcher limit, see more here: https://github.com/guard/listen/wiki/Increasing-the-amount-of-inotify-watchers#the-technical-details\n    - echo fs.inotify.max_user_watches=524288 | tee -a /etc/sysctl.conf && sysctl -p\n    - mkdir -p /root/.android && touch /root/.android/repositories.cfg\n    # The Dockerimage provides two paths for sdkmanager and avdmanager, which the defaults are from $ANDROID_HOME/cmdline-tools\n    # That is not compatible with the one that Detox is using ($ANDROID_HOME/tools/bin)\n    - echo yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --channel=0 --verbose "system-images;android-27;default;x86_64" "emulator"\n    # Nexus 6P, API 27, XXXHDPI\n    - echo no | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager --verbose create avd --force --name "Nexus6P" --package "system-images;android-27;default;x86_64" --sdcard 200M --device 11\n    - adb start-server\n  script:\n    - npx detox build -c android.emu.release.ci\n    - npx detox test -c android.emu.release.ci --headless\n')))}d.isMDXComponent=!0}}]);